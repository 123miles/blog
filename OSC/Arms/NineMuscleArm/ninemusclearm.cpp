/***************************************************
 * Automatically generated by Maple.
 * Created On: Mon Sep 30 18:53:13 2013.
***************************************************/
#ifdef WMI_WINNT
#define EXP __declspec(dllexport)
#else
#define EXP
#endif
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include "mplshlib.h"
static MKernelVector kv;
EXP ALGEB M_DECL SetKernelVector(MKernelVector kv_in, ALGEB args) { kv=kv_in; return(kv->toMapleNULL()); }

/***************************************************
* Variable Definition for System:

* State variable(s):
*    x[ 0] = `Main.'MuscleArm1::Muscle1::HillMuscle1::D4'.x`(t)
*    x[ 1] = `Main.'MuscleArm1::Muscle2::HillMuscle1::D4'.x`(t)
*    x[ 2] = `Main.'MuscleArm1::Muscle3::HillMuscle1::D4'.x`(t)
*    x[ 3] = `Main.'MuscleArm1::Muscle4::HillMuscle1::D4'.x`(t)
*    x[ 4] = `Main.'MuscleArm1::Muscle5::HillMuscle1::D4'.x`(t)
*    x[ 5] = `Main.'MuscleArm1::Muscle6::HillMuscle1::D4'.x`(t)
*    x[ 6] = `Main.'MuscleArm1::Muscle7::HillMuscle1::D4'.x`(t)
*    x[ 7] = `Main.'MuscleArm1::Muscle8::HillMuscle1::D4'.x`(t)
*    x[ 8] = `Main.'MuscleArm1::Muscle9::HillMuscle1::D4'.x`(t)
*    x[ 9] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle1_MLength`(t)
*    x[10] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle1_MLength`(t),t)
*    x[11] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle2_MLength`(t)
*    x[12] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle2_MLength`(t),t)
*    x[13] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle3_MLength`(t)
*    x[14] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle3_MLength`(t),t)
*    x[15] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle4_MLength`(t)
*    x[16] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle4_MLength`(t),t)
*    x[17] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle5_MLength`(t)
*    x[18] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle5_MLength`(t),t)
*    x[19] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle6_MLength`(t)
*    x[20] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle6_MLength`(t),t)
*    x[21] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle7_MLength`(t)
*    x[22] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle7_MLength`(t),t)
*    x[23] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle8_MLength`(t)
*    x[24] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle8_MLength`(t),t)
*    x[25] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle9_MLength`(t)
*    x[26] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle9_MLength`(t),t)
*    x[27] = `Main.DFPSubsys1inst.s_MuscleArm1_P8`(t)
*    x[28] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_P8`(t),t)
*    x[29] = `Main.DFPSubsys1inst.s_MuscleArm1_P9`(t)
*    x[30] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_P9`(t),t)
*    x[31] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle1_R4`(t)
*    x[32] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle1_R4`(t),t)
*    x[33] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle2_R4`(t)
*    x[34] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle2_R4`(t),t)
*    x[35] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle3_R4`(t)
*    x[36] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle3_R4`(t),t)
*    x[37] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle4_R4`(t)
*    x[38] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle4_R4`(t),t)
*    x[39] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle5_R4`(t)
*    x[40] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle5_R4`(t),t)
*    x[41] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle6_R4`(t)
*    x[42] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle6_R4`(t),t)
*    x[43] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle7_R4`(t)
*    x[44] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle7_R4`(t),t)
*    x[45] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle8_R4`(t)
*    x[46] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle8_R4`(t),t)
*    x[47] = `Main.DFPSubsys1inst.theta_MuscleArm1_Muscle9_R4`(t)
*    x[48] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_Muscle9_R4`(t),t)
*    x[49] = `Main.DFPSubsys1inst.theta_MuscleArm1_R1`(t)
*    x[50] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_R1`(t),t)
*    x[51] = `Main.DFPSubsys1inst.theta_MuscleArm1_R2`(t)
*    x[52] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_R2`(t),t)
*    x[53] = `Main.DFPSubsys1inst.theta_MuscleArm1_R3`(t)
*    x[54] = diff(`Main.DFPSubsys1inst.theta_MuscleArm1_R3`(t),t)
*
* Output variable(s):
*    y[ 0] = `Main.DFPSubsys1inst.theta_MuscleArm1_R1`(t)
*    y[ 1] = `Main.DFPSubsys1inst.theta_MuscleArm1_R2`(t)
*    y[ 2] = `Main.DFPSubsys1inst.theta_MuscleArm1_R3`(t)
*    y[ 3] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle1_MLength`(t)
*    y[ 4] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle2_MLength`(t)
*    y[ 5] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle3_MLength`(t)
*    y[ 6] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle4_MLength`(t)
*    y[ 7] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle5_MLength`(t)
*    y[ 8] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle6_MLength`(t)
*    y[ 9] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle7_MLength`(t)
*    y[10] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle8_MLength`(t)
*    y[11] = `Main.DFPSubsys1inst.s_MuscleArm1_Muscle9_MLength`(t)
*    y[12] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle1_MLength`(t),t)
*    y[13] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle2_MLength`(t),t)
*    y[14] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle3_MLength`(t),t)
*    y[15] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle4_MLength`(t),t)
*    y[16] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle5_MLength`(t),t)
*    y[17] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle6_MLength`(t),t)
*    y[18] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle7_MLength`(t),t)
*    y[19] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle8_MLength`(t),t)
*    y[20] = diff(`Main.DFPSubsys1inst.s_MuscleArm1_Muscle9_MLength`(t),t)
*
* Input variable(s):
*    u[ 0] = `Main.'MuscleArm1::ma1'`(t)
*    u[ 1] = `Main.'MuscleArm1::ma2'`(t)
*    u[ 2] = `Main.'MuscleArm1::ma3'`(t)
*    u[ 3] = `Main.'MuscleArm1::ma4'`(t)
*    u[ 4] = `Main.'MuscleArm1::ma5'`(t)
*    u[ 5] = `Main.'MuscleArm1::ma6'`(t)
*    u[ 6] = `Main.'MuscleArm1::ma7'`(t)
*    u[ 7] = `Main.'MuscleArm1::ma8'`(t)
*    u[ 8] = `Main.'MuscleArm1::ma9'`(t)
*
************************************************/

/* Configurable parameters */
#define CONITER 10
#define CONTOL 1.000000e-05

/* Fixed parameters */
#define NDIFF 55
#define NDFA 55
#define NEQ 153
#define NPAR 0
#define NINP 9
#define NDISC 0
#define NIX1 98
#define NOUT 21
#define NCON 40
#define NEVT 0
#ifdef EVTHYST
#define NZC 2*NEVT
#else
#define NZC NEVT
#endif

typedef struct {
	double h;		/* Integration step size */
	double *w;		/* Float workspace */
	long *iw;		/* Integer workspace */
	long err;		/* Error flag */
	char *buf;		/* Error message */
} SolverStruct;

static void SolverError(SolverStruct *S, char *errmsg)
{
	sprintf(S->buf,"Error at t=%20.16e: %s\n",S->w[0],errmsg);
	if(S->err==-1) kv->error(S->buf);
	S->err=1;
}

static double dsn_zero=0.0;
static unsigned char dsn_undefC[8] = { 0, 0, 0, 0, 0, 0, 0xF8, 0x7F };
static double *dsn_undef = (double *)&dsn_undefC;
static unsigned char dsn_posinfC[8] = { 0, 0, 0, 0, 0, 0, 0xF0, 0x7F };
static double *dsn_posinf = (double *)&dsn_posinfC;
static unsigned char dsn_neginfC[8] = { 0, 0, 0, 0, 0, 0, 0xF0, 0xFF };
static double *dsn_neginf = (double *)&dsn_neginfC;
#define trunc(v) ( (v>0.0) ? floor(v) : ceil(v) )


static void DecompCInc(long n, double *A, long Ainc, long *ip)
{
	long i,j,k,m;
	double t;

	ip[n-1]=1;
	for(k=0;k<n-1;k++) {
		m=k;
		for(i=k+1;i<n;i++)
			if( fabs(A[i*Ainc+k])>fabs(A[m*Ainc+k]) ) m=i;
		ip[k]=m;
		if( m!=k ) ip[n-1]=-ip[n-1];
		t=A[m*Ainc+k]; A[m*Ainc+k]=A[(Ainc+1)*k]; A[(Ainc+1)*k]=t;
		if( t==0.0 ) { ip[n-1]=0; return; }
		t=-1.0/t;
		for(i=k+1;i<n;i++) A[i*Ainc+k]=A[i*Ainc+k]*t;
		for(j=k+1;j<n;j++) {
			t=A[m*Ainc+j]; A[m*Ainc+j]=A[k*Ainc+j]; A[k*Ainc+j]=t;
			if( t!=0.0 )
				for(i=k+1;i<n;i++) A[i*Ainc+j]+=A[i*Ainc+k]*t;
		}
	}
	if(A[(n-1)*(Ainc+1)]==0.0) ip[n-1]=0;
}
static void DecompC(long n, double *A, long *ip) { DecompCInc(n,A,n,ip); }


static void MultiSolveCInc(long n, double *A, long Ainc, long *ip, long nb, double *b, long binc)
{
	long i,j,k,m;
	double t;

	if( n>1 ) {
		for(j=0;j<n-1;j++) {
			m=ip[j];
			for(k=0;k<nb;k++) {
				t=b[m*binc+k]; b[m*binc+k]=b[j*binc+k]; b[j*binc+k]=t;
				for(i=j+1;i<n;i++) b[i*binc+k]+=A[i*Ainc+j]*t;
			}
		}
		for(j=n-1;j>0;j--) {
			for(k=0;k<nb;k++) {
				b[j*binc+k]=b[j*binc+k]/A[(Ainc+1)*j];
				t=-b[j*binc+k];
				for(i=0;i<=j-1;i++) b[i*binc+k]+=A[i*Ainc+j]*t;
			}
		}
	}
	for(k=0;k<nb;k++)
		b[k]=b[k]/A[0];
}
static void MultiSolveC(long n, double *A, long *ip, long nb, double *b) { MultiSolveCInc(n,A,n,ip,nb,b,nb); }


static void SolveCInc(long n, double *A, long Ainc, long *ip, double *b)
{
	long i,j,m;
	double t;

	if( n>1 ) {
		for(j=0;j<n-1;j++) {
			m=ip[j];
			t=b[m]; b[m]=b[j]; b[j]=t;
			for(i=j+1;i<n;i++) b[i]+=A[i*Ainc+j]*t;
		}
		for(j=n-1;j>0;j--) {
			b[j]=b[j]/A[(Ainc+1)*j];
			t=-b[j];
			for(i=0;i<=j-1;i++) b[i]+=A[i*Ainc+j]*t;
		}
	}
	b[0]=b[0]/A[0];
}
static void SolveC(long n, double *A, long *ip, double *b) { SolveCInc(n,A,n,ip,b); }


static void fp(long N, double T, double *Y, double *YP)
{
	double M[49], V[7], Z[100];
	long P[7], ti1, ti2;

	YP[9] = Y[10];
	YP[11] = Y[12];
	YP[13] = Y[14];
	YP[15] = Y[16];
	YP[17] = Y[18];
	YP[19] = Y[20];
	YP[21] = Y[22];
	YP[23] = Y[24];
	YP[25] = Y[26];
	YP[27] = Y[28];
	YP[29] = Y[30];
	YP[31] = Y[32];
	YP[33] = Y[34];
	YP[35] = Y[36];
	YP[37] = Y[38];
	YP[39] = Y[40];
	YP[41] = Y[42];
	YP[43] = Y[44];
	YP[45] = Y[46];
	YP[47] = Y[48];
	YP[49] = Y[50];
	YP[51] = Y[52];
	YP[53] = Y[54];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[6]-Y[21]));
	Y[94] = V[0]/M[0];
	M[0] = -0.027;
	V[0] = tanh(3141592653.58979324*(Y[21]-Y[6]))-1.25;
	Y[95] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[94]+0.027;
	Z[0] = 1.0/Z[0];
	V[0] = 0.027*Z[0];
	Y[98] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[150]*Y[95]+0.02;
	Y[96] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[6]-Y[21])*Y[96];
	Y[97] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[150]-Y[97];
	Y[99] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[7]-Y[23]));
	Y[100] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[98]*Y[99];
	Y[118] = V[0]/M[0];
	M[0] = -0.045;
	V[0] = tanh(3141592653.58979324*(Y[23]-Y[7]))-1.25;
	Y[101] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[100]+0.045;
	Z[0] = 1.0/Z[0];
	V[0] = 0.045*Z[0];
	Y[104] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[151]*Y[101]+0.02;
	Y[102] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[7]-Y[23])*Y[102];
	Y[103] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[151]-Y[103];
	Y[105] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[8]-Y[25]));
	Y[106] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[104]*Y[105];
	Y[119] = V[0]/M[0];
	M[0] = -0.045;
	V[0] = tanh(3141592653.58979324*(Y[25]-Y[8]))-1.25;
	Y[107] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[106]+0.045;
	Z[0] = 1.0/Z[0];
	V[0] = 0.045*Z[0];
	Y[110] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[152]*Y[107]+0.02;
	Y[108] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[8]-Y[25])*Y[108];
	Y[109] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[152]-Y[109];
	Y[111] = V[0]/M[0];
	M[0] = -0.002;
	V[0] = Y[54]+0.1*Y[53];
	Y[57] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[110]*Y[111];
	Y[120] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 0.;
	Y[129] = V[0]/M[0];
	M[0] = Y[25];
	V[0] = 0.;
	Y[139] = V[0]/M[0];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = cos(Y[49]);
	Z[1] = cos(Y[51]);
	Z[2] = cos(Y[45]);
	Z[3] = sin(Y[51]);
	Z[4] = sin(Y[45]);
	Z[5] = Z[1]*Z[2]-Z[3]*Z[4];
	Z[6] = sin(Y[49]);
	Z[2] = Z[3]*Z[2]+Z[1]*Z[4];
	Z[4] = Z[0]*Z[5]-Z[6]*Z[2];
	Z[7] = Z[0]*Z[1]-Z[6]*Z[3];
	Z[2] = Z[6]*Z[5]+Z[0]*Z[2];
	Z[0] = Z[6]*Z[1]+Z[0]*Z[3];
	Z[1] = Z[4]*Z[7];
	M[0] = Z[1]+Z[0]*Z[2];
	Z[3] = Z[2]*Z[7];
	M[1] = Z[3]-Z[4]*Z[0];
	M[7] = Y[23]*(Z[4]*Z[0]-Z[3]);
	M[8] = Y[23]*(Z[1]+Z[0]*Z[2]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	Y[128] = V[0];
	Y[138] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = cos(Y[49]);
	Z[1] = cos(Y[51]);
	Z[2] = cos(Y[43]);
	Z[3] = sin(Y[51]);
	Z[4] = sin(Y[43]);
	Z[5] = Z[1]*Z[2]-Z[3]*Z[4];
	Z[6] = sin(Y[49]);
	Z[2] = Z[3]*Z[2]+Z[1]*Z[4];
	Z[4] = Z[0]*Z[5]-Z[6]*Z[2];
	Z[7] = Z[0]*Z[1]-Z[6]*Z[3];
	Z[2] = Z[6]*Z[5]+Z[0]*Z[2];
	Z[0] = Z[6]*Z[1]+Z[0]*Z[3];
	Z[1] = Z[4]*Z[7];
	M[0] = Z[1]+Z[0]*Z[2];
	Z[3] = Z[2]*Z[7];
	M[1] = Z[3]-Z[4]*Z[0];
	M[7] = Y[21]*(Z[4]*Z[0]-Z[3]);
	M[8] = Y[21]*(Z[1]+Z[0]*Z[2]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	Y[127] = V[0];
	Y[137] = V[1];
	M[0] = -0.002;
	V[0] = Y[50]+0.1*Y[49];
	Y[55] = V[0]/M[0];
	M[0] = -0.002;
	V[0] = Y[54]+0.1*Y[53]-0.002*Y[57];
	Y[143] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[0]-Y[9]));
	Y[58] = V[0]/M[0];
	M[0] = -0.002;
	V[0] = Y[50]+0.1*Y[49]-0.002*Y[55];
	Y[141] = V[0]/M[0];
	M[0] = -0.009;
	V[0] = tanh(3141592653.58979324*(Y[9]-Y[0]))-1.25;
	Y[59] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[58]+0.009;
	Z[0] = 1.0/Z[0];
	V[0] = 0.009*Z[0];
	Y[62] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[144]*Y[59]+0.02;
	Y[60] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[0]-Y[9])*Y[60];
	Y[61] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[144]-Y[61];
	Y[63] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[1]-Y[11]));
	Y[64] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[62]*Y[63];
	Y[112] = V[0]/M[0];
	M[0] = -0.009;
	V[0] = tanh(3141592653.58979324*(Y[11]-Y[1]))-1.25;
	Y[65] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[64]+0.009;
	Z[0] = 1.0/Z[0];
	V[0] = 0.009*Z[0];
	Y[68] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[145]*Y[65]+0.02;
	Y[66] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[1]-Y[11])*Y[66];
	Y[67] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[145]-Y[67];
	Y[69] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[2]-Y[13]));
	Y[70] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[68]*Y[69];
	Y[113] = V[0]/M[0];
	M[0] = -0.009;
	V[0] = tanh(3141592653.58979324*(Y[13]-Y[2]))-1.25;
	Y[71] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[70]+0.009;
	Z[0] = 1.0/Z[0];
	V[0] = 0.009*Z[0];
	Y[74] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[146]*Y[71]+0.02;
	Y[72] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[2]-Y[13])*Y[72];
	Y[73] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[146]-Y[73];
	Y[75] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[3]-Y[15]));
	Y[76] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[74]*Y[75];
	Y[114] = V[0]/M[0];
	M[0] = -0.009;
	V[0] = tanh(3141592653.58979324*(Y[15]-Y[3]))-1.25;
	Y[77] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[76]+0.009;
	Z[0] = 1.0/Z[0];
	V[0] = 0.009*Z[0];
	Y[80] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[147]*Y[77]+0.02;
	Y[78] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[3]-Y[15])*Y[78];
	Y[79] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[147]-Y[79];
	Y[81] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[4]-Y[17]));
	Y[82] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[80]*Y[81];
	Y[115] = V[0]/M[0];
	M[0] = -0.045;
	V[0] = tanh(3141592653.58979324*(Y[17]-Y[4]))-1.25;
	Y[83] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[82]+0.045;
	Z[0] = 1.0/Z[0];
	V[0] = 0.045*Z[0];
	Y[86] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[148]*Y[83]+0.02;
	Y[84] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[4]-Y[17])*Y[84];
	Y[85] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[148]-Y[85];
	Y[87] = V[0]/M[0];
	M[0] = 1.;
	V[0] = fabs(10000.*(Y[5]-Y[19]));
	Y[88] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[86]*Y[87];
	Y[116] = V[0]/M[0];
	M[0] = -0.045;
	V[0] = tanh(3141592653.58979324*(Y[19]-Y[5]))-1.25;
	Y[89] = V[0]/M[0];
	M[0] = 1.;
	Z[0] = Y[88]+0.045;
	Z[0] = 1.0/Z[0];
	V[0] = 0.045*Z[0];
	Y[92] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[149]*Y[89]+0.02;
	Y[90] = V[0]/M[0];
	M[0] = 1.;
	V[0] = -10000.*(Y[5]-Y[19])*Y[90];
	Y[91] = V[0]/M[0];
	M[0] = 1.;
	V[0] = Y[149]-Y[91];
	Y[93] = V[0]/M[0];
	M[0] = -0.002;
	V[0] = Y[52]+0.1*Y[51];
	Y[56] = V[0]/M[0];
	M[0] = -1.;
	V[0] = Y[92]*Y[93];
	Y[117] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 0.;
	Y[121] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 0.;
	Y[122] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 0.;
	Y[123] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 0.;
	Y[124] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 0.;
	Y[125] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 0.;
	Y[126] = V[0]/M[0];
	M[0] = Y[9];
	V[0] = 0.;
	Y[131] = V[0]/M[0];
	M[0] = Y[11];
	V[0] = 0.;
	Y[132] = V[0]/M[0];
	M[0] = Y[13];
	V[0] = 0.;
	Y[133] = V[0]/M[0];
	M[0] = Y[15];
	V[0] = 0.;
	Y[134] = V[0]/M[0];
	M[0] = Y[17];
	V[0] = 0.;
	Y[135] = V[0]/M[0];
	M[0] = Y[19];
	V[0] = 0.;
	Y[136] = V[0]/M[0];
	M[0] = -0.002;
	V[0] = Y[52]+0.1*Y[51]-0.002*Y[56];
	Y[142] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[9]-Y[0]);
	YP[0] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[11]-Y[1]);
	YP[1] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[13]-Y[2]);
	YP[2] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[15]-Y[3]);
	YP[3] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[17]-Y[4]);
	YP[4] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[19]-Y[5]);
	YP[5] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[21]-Y[6]);
	YP[6] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[23]-Y[7]);
	YP[7] = V[0]/M[0];
	M[0] = 1.;
	V[0] = 10000.*(Y[25]-Y[8]);
	YP[8] = V[0]/M[0];
	for(ti1=1;ti1<=7;ti1++)
		for(ti2=1;ti2<=7;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=7;ti1++)
		V[ti1-1] = 0.;
	Z[0] = cos(Y[49]);
	Z[1] = 0.08*Z[0];
	Z[2] = Z[1]-0.055;
	Z[3] = sin(Y[49]);
	Z[4] = 0.0064*Z[3]*Z[3];
	Z[5] = Z[2]*Z[2]+Z[4];
	Z[1] = Z[1]+0.055;
	Z[4] = Z[1]*Z[1]+Z[4];
	Z[6] = cos(Y[51]);
	Z[7] = 0.03*Z[6];
	Z[8] = -Z[7]+0.12;
	Z[9] = sin(Y[51]);
	Z[10] = 0.0009*Z[9]*Z[9];
	Z[11] = Z[8]*Z[8]+Z[10];
	Z[7] = Z[7]+0.12;
	Z[10] = Z[7]*Z[7]+Z[10];
	Z[12] = Z[3]*Z[9]-Z[0]*Z[6];
	Z[13] = 0.045*Z[12];
	Z[14] = 0.31*Z[0];
	Z[15] = Z[14]+Z[13]-0.04;
	Z[16] = -(Z[0]*Z[9]+Z[6]*Z[3]);
	Z[17] = 0.045*Z[16];
	Z[18] = 0.31*Z[3];
	Z[19] = Z[18]+Z[17];
	Z[20] = Z[15]*Z[15]+Z[19]*Z[19];
	Z[13] = Z[14]-Z[13]+0.04;
	Z[17] = Z[18]-Z[17];
	Z[21] = Z[13]*Z[13]+Z[17]*Z[17];
	Z[22] = cos(Y[53]);
	Z[23] = sin(Y[53]);
	Z[24] = Z[6]*Z[22]-Z[9]*Z[23];
	Z[22] = Z[9]*Z[22]+Z[6]*Z[23];
	Z[23] = Z[3]*Z[22]-Z[0]*Z[24];
	Z[25] = Y[29]+0.07*Z[23]-0.27*Z[0];
	Z[26] = -(Z[3]*Z[24]+Z[0]*Z[22]);
	Z[27] = Y[27]+0.07*Z[26]-0.27*Z[3];
	Z[28] = Z[0]*Z[25]+Z[3]*Z[27];
	Z[25] = Z[0]*Z[27]-Z[3]*Z[25];
	Z[27] = Z[28]*Z[28]+Z[25]*Z[25];
	Z[29] = -Z[12];
	Z[30] = -0.025*Z[9]+0.15*Z[22];
	Z[31] = 0.025*Z[6]-0.15*Z[24]-0.31;
	Z[32] = Z[31]*Z[0]+Z[30]*Z[3]+Y[29];
	Z[33] = -Z[16];
	Z[30] = Z[31]*Z[3]+Y[27]-Z[30]*Z[0];
	Z[31] = Z[29]*Z[32]+Z[33]*Z[30];
	Z[34] = -Z[33];
	Z[30] = Z[34]*Z[32]+Z[29]*Z[30];
	Z[32] = Z[31]*Z[31]+Z[30]*Z[30];
	Z[35] = 0.005*Z[9]+0.065*Z[22];
	Z[36] = -0.005*Z[6]-0.065*Z[24]-0.31;
	Z[37] = Z[36]*Z[0]+Z[35]*Z[3]+Y[29];
	Z[35] = Z[36]*Z[3]+Y[27]-Z[35]*Z[0];
	Z[36] = Z[29]*Z[37]+Z[33]*Z[35];
	Z[35] = Z[34]*Z[37]+Z[29]*Z[35];
	Z[37] = Z[36]*Z[36]+Z[35]*Z[35];
	M[0] = 0.35;
	Z[23] = 0.02625*Z[23];
	M[2] = Z[23];
	M[3] = Z[23];
	M[4] = Z[23];
	M[5] = Z[34];
	Z[38] = -Z[29];
	M[6] = Z[38];
	Z[39] = Y[50]+Y[54]+Y[52];
	Z[40] = -Z[26];
	if( Z[37]>0. )
		Z[41] = Y[118]/(sqrt(Z[37]));
	else
		Z[41] = 0.;
	if( Z[32]>0. )
		Z[42] = Y[119]/(sqrt(Z[32]));
	else
		Z[42] = 0.;
	Z[43] = cos(Y[47]);
	Z[44] = sin(Y[47]);
	Z[45] = Z[3]*Z[43]+Z[0]*Z[44];
	Z[46] = Z[0]*Z[43]-Z[3]*Z[44];
	if( Z[27]>0. )
		Z[47] = Y[120]/(sqrt(Z[27]));
	else
		Z[47] = 0.;
	Z[30] = Z[30]*Z[42];
	Z[35] = Z[35]*Z[41];
	Z[48] = Y[137]+Z[35]+Y[138]+Z[30];
	Z[36] = Z[36]*Z[41];
	Z[31] = Z[31]*Z[42];
	Z[41] = Y[127]+Z[36]+Y[128]+Z[31];
	Z[39] = Z[39]*Z[39];
	Z[42] = Z[45]*Y[129];
	Z[49] = Z[46]*Y[139];
	Z[50] = (Z[3]*Z[28]+Z[0]*Z[25])*Z[47];
	Z[51] = Z[48]*Z[29];
	Z[52] = 0.02625*Z[40];
	Z[53] = Z[51]+Z[41]*Z[33]+Z[50]+Z[42]+Z[49]-Z[52]*Z[39];
	V[0] = Z[53];
	M[8] = 0.35;
	M[9] = Z[52];
	M[10] = Z[52];
	M[11] = Z[52];
	M[12] = Z[38];
	M[13] = Z[33];
	Z[54] = -38.09523809523809524*Z[23];
	Z[46] = Z[46]*Y[129];
	Z[45] = -Z[45]*Y[139];
	Z[55] = (Z[0]*Z[28]-Z[3]*Z[25])*Z[47];
	Z[56] = Z[48]*Z[34];
	Z[57] = Z[41]*Z[29]+Z[56]+Z[55]+Z[46]+Z[45]-0.02625*Z[39]*Z[54];
	V[1] = Z[57];
	M[14] = Z[23];
	M[15] = Z[52];
	Z[58] = 0.075*(Z[40]*Z[52]-Z[54]*Z[23]);
	Z[59] = Z[58]+0.001;
	M[16] = Z[59];
	M[17] = Z[59];
	M[18] = Z[59];
	Z[60] = 0.025*(Z[40]*Z[38]-Z[54]*Z[34]);
	M[19] = Z[60]+0.075*(Z[54]*Z[33]-Z[40]*Z[29]);
	Z[61] = 0.025*(Z[40]*Z[33]-Z[54]*Z[38]);
	Z[62] = 0.075*(Z[54]*Z[29]-Z[40]*Z[34]);
	M[20] = Z[61]+Z[62];
	Z[41] = -Z[41];
	Z[63] = Z[43]*Y[129];
	Z[64] = Z[44]*Y[139];
	Z[28] = Z[28]*Z[47];
	Z[65] = Z[6]*Z[41]+Z[9]*Z[48]+Z[64]-Z[63]-Z[28];
	Z[44] = Z[44]*Y[129];
	Z[43] = Z[43]*Y[139];
	Z[25] = Z[25]*Z[47];
	Z[41] = Z[9]*Z[41]-Z[6]*Z[48]-Z[44]-Z[43]-Z[25];
	Z[47] = -(Y[127]+Z[36]);
	Z[48] = -(Y[137]+Z[35]);
	Z[66] = -(Y[128]+Z[31]);
	Z[67] = -(Y[138]+Z[30]);
	Z[28] = Z[64]-Z[63]-Z[28];
	Z[25] = -(Z[44]+Z[43]+Z[25]);
	Z[43] = Z[3]*Z[28]+Z[0]*Z[25];
	Z[28] = Z[0]*Z[28]-Z[3]*Z[25];
	Z[44] = 0.035;
	Z[63] = 0.05;
	Z[64] = Z[44]*(Z[29]*Z[47]+Z[48]*Z[34]);
	Z[68] = Z[63]*(Z[29]*Z[66]+Z[34]*Z[67]);
	Z[57] = 0.075*Z[57];
	Z[69] = 0.025*(Z[0]*Z[65]-Z[3]*Z[41]);
	Z[53] = 0.075*Z[53];
	Z[41] = 0.025*(Z[3]*Z[65]+Z[0]*Z[41]);
	Z[44] = Z[44]*(Z[33]*Z[47]+Z[48]*Z[29]);
	Z[47] = Z[63]*(Z[33]*Z[66]+Z[29]*Z[67]);
	Z[48] = 0.01*(3.*Z[28]+100.*(Z[57]+Z[64]-Z[69]-Z[68]))*Z[40];
	Z[63] = 0.01*(-3.*Z[43]+100.*(Z[41]+Z[47]-Z[53]-Z[44]))*Z[54];
	V[2] = Z[48]+Z[63]+Y[143];
	M[21] = Z[33];
	M[22] = Z[29];
	Z[24] = 0.1*Z[24];
	Z[65] = 0.225*Z[6];
	Z[66] = Z[65]+Z[24]+0.31;
	Z[22] = 0.1*Z[22]+0.225*Z[9];
	Z[67] = Z[0]*Z[22]+Z[66]*Z[3];
	Z[22] = Z[3]*Z[22];
	Z[66] = Z[22]-Z[66]*Z[0];
	M[23] = Z[33]*Z[66]+Z[29]*Z[67];
	Z[26] = -0.1*Z[26]-0.225*Z[16];
	Z[22] = -(Z[65]+Z[24])*Z[0]+Z[22];
	M[24] = Z[26]*Z[29]+Z[22]*Z[33];
	Z[24] = 0.1*Z[40];
	Z[65] = 3.809523809523809524*Z[23];
	M[25] = Z[24]*Z[29]+Z[65]*Z[33];
	Z[70] = Y[50]+Y[52];
	Z[70] = Z[70]*Z[70];
	Z[71] = Y[50]*Y[50];
	Z[39] = 0.1*Z[39];
	Z[72] = 0.225*Z[70];
	Z[14] = Z[14]*Z[71]+Z[72]*Z[29]+Z[39]*Z[54];
	Z[18] = Z[18]*Z[71]+Z[72]*Z[33]+Z[39]*Z[40];
	V[3] = -(Z[14]*Z[29]+Z[18]*Z[33]);
	M[28] = Z[29];
	M[29] = Z[34];
	M[30] = Z[29]*Z[66]+Z[34]*Z[67];
	M[31] = Z[26]*Z[34]+Z[22]*Z[29];
	M[32] = Z[24]*Z[34]+Z[65]*Z[29];
	V[4] = -(Z[14]*Z[34]+Z[18]*Z[29]);
	M[35] = Z[23];
	M[36] = Z[52];
	Z[14] = 0.1188*Z[16];
	Z[16] = 0.4092*Z[3];
	Z[18] = Z[16]-Z[14];
	Z[12] = 0.1188*Z[12];
	Z[22] = 0.4092*Z[0];
	Z[24] = Z[12]-Z[22];
	Z[26] = 0.09*(Z[18]*Z[33]-Z[24]*Z[29]);
	M[37] = Z[26]+Z[58]+0.013;
	Z[39] = 0.1188*Z[33];
	Z[65] = 0.1188*Z[29];
	Z[66] = 0.09*(Z[33]*Z[39]+Z[65]*Z[29]);
	M[38] = Z[66]+Z[58]+0.013;
	M[39] = Z[59];
	Z[67] = 0.075*Z[54];
	Z[72] = -0.025*Z[54]-0.09*Z[29];
	Z[73] = 0.01*Z[33]*(9.*Z[38]+100.*Z[67]);
	M[40] = Z[72]*Z[34]-0.025*(-Z[38]+3.*Z[29])*Z[40]+Z[73];
	Z[74] = Z[33]*Z[33];
	M[41] = Z[72]*Z[38]+0.025*(Z[33]-3.*Z[34])*Z[40]+Z[29]*Z[67]+0.09*Z[74]+0.135;
	Z[67] = sin(Y[39]);
	Z[72] = cos(Y[39]);
	if( Z[21]>0. )
		Z[75] = Y[116]/(sqrt(Z[21]));
	else
		Z[75] = 0.;
	Z[76] = Z[67]*Y[125];
	Z[77] = Z[72]*Y[135];
	Z[17] = Z[17]*Z[75];
	Z[78] = -(Z[76]+Z[77]+Z[17]);
	Z[72] = Z[72]*Y[125];
	Z[67] = Z[67]*Y[135];
	Z[13] = Z[13]*Z[75];
	Z[75] = Z[67]-Z[72]-Z[13];
	Z[79] = sin(Y[41]);
	Z[80] = cos(Y[41]);
	if( Z[20]>0. )
		Z[81] = Y[117]/(sqrt(Z[20]));
	else
		Z[81] = 0.;
	Z[82] = Z[79]*Y[126];
	Z[83] = Z[80]*Y[136];
	Z[19] = Z[19]*Z[81];
	Z[84] = -(Z[82]+Z[83]+Z[19]);
	Z[80] = Z[80]*Y[126];
	Z[79] = Z[79]*Y[136];
	Z[15] = Z[15]*Z[81];
	Z[81] = Z[79]-Z[80]-Z[15];
	Z[85] = sin(Y[35]);
	Z[86] = cos(Y[35]);
	if( Z[10]>0. )
		Z[87] = Y[114]/(sqrt(Z[10]));
	else
		Z[87] = 0.;
	Z[88] = Z[85]*Y[123];
	Z[89] = Z[86]*Y[133];
	Z[90] = 0.03*Z[9];
	Z[31] = -(Y[127]+Z[36]+Y[128]+Z[31])+0.1188*Z[70];
	Z[36] = Z[31]*Z[33];
	Z[16] = Z[16]*Z[71];
	Z[31] = Z[31]*Z[29];
	Z[22] = Z[22]*Z[71];
	Z[70] = sin(Y[37]);
	Z[91] = cos(Y[37]);
	if( Z[11]>0. )
		Z[92] = Y[115]/(sqrt(Z[11]));
	else
		Z[92] = 0.;
	Z[93] = Z[70]*Y[124];
	Z[94] = Z[91]*Y[134];
	Z[95] = cos(Y[45]);
	Z[96] = sin(Y[45]);
	Z[97] = Z[6]*Z[95]-Z[9]*Z[96];
	Z[95] = Z[9]*Z[95]+Z[6]*Z[96];
	Z[96] = cos(Y[43]);
	Z[98] = sin(Y[43]);
	Z[99] = Z[6]*Z[96]-Z[9]*Z[98];
	Z[96] = Z[9]*Z[96]+Z[6]*Z[98];
	Z[6] = (Z[88]+Z[89]+Z[90]*Z[87]+Z[90]*Z[92]-Z[93]-Z[94])*Z[6];
	Z[7] = -(Z[70]*Y[134]+Z[86]*Y[123]+Z[7]*Z[87]-Z[91]*Y[124]-Z[8]*Z[92]-Z[85]*Y[133])*Z[9];
	Z[8] = 0.09*(Z[29]*(Z[36]+Z[16]-Z[51])-Z[33]*(Z[31]+Z[22]-Z[56]));
	Z[70] = 0.085*Y[137];
	Z[85] = 0.115*Y[138];
	Z[35] = 0.085*Z[35];
	Z[30] = 0.115*Z[30];
	Z[86] = (Z[3]*Z[99]*Z[29]*Y[127]+Z[3]*Z[99]*Z[34]*Y[137]+Z[0]*Z[96]*Z[29]*Y[127]+Z[0]*Z[96]*Z[34]*Y[137]+Z[3]*Z[96]*Z[33]*Y[127]+Z[3]*Z[96]*Z[29]*Y[137]-Z[0]*Z[99]*Z[33]*Y[127]-Z[0]*Z[99]*Z[29]*Y[137])*Y[21];
	Z[90] = (Z[3]*Z[97]*Z[29]*Y[128]+Z[3]*Z[97]*Z[34]*Y[138]+Z[0]*Z[95]*Z[29]*Y[128]+Z[0]*Z[95]*Z[34]*Y[138]+Z[3]*Z[95]*Z[33]*Y[128]+Z[3]*Z[95]*Z[29]*Y[138]-Z[0]*Z[97]*Z[33]*Y[128]-Z[0]*Z[97]*Z[29]*Y[138])*Y[23];
	V[5] = (Z[64]+Z[57]-Z[69]-Z[68])*Z[40]+(Z[47]+Z[41]-Z[44]-Z[53])*Z[54]+Z[86]+Z[90]+Z[8]+Z[70]+Z[85]+Y[142]+Z[30]+Z[35]+0.03*(Z[6]+Z[7]+Z[40]*Z[28]-Z[54]*Z[43])+0.045*(-(Z[78]-Z[84])*Z[29]+(Z[75]-Z[81])*Z[33]);
	M[42] = Z[23];
	M[43] = Z[52];
	Z[23] = 0.70835*Z[0];
	Z[28] = 0.70835*Z[3];
	M[44] = Z[26]+Z[58]+0.155*(-(Z[24]+Z[12]-Z[23])*Z[0]-(Z[14]-Z[28]-Z[18])*Z[3])+0.0271;
	M[45] = Z[66]+Z[58]+0.013+0.31*(Z[0]*Z[65]+Z[39]*Z[3]);
	M[46] = Z[59];
	Z[12] = Z[38]-Z[29];
	Z[14] = Z[33]-Z[34];
	M[47] = Z[60]-0.015*(5.*Z[40]+6.*Z[34])*Z[29]+Z[73]+0.155*(Z[14]*Z[0]+Z[12]*Z[3]);
	M[48] = Z[61]+Z[62]+0.09*(Z[74]-Z[29]*Z[38])+0.135+0.155*(Z[3]*Z[14]-Z[12]*Z[0]);
	Z[12] = sin(Y[33]);
	Z[14] = cos(Y[33]);
	if( Z[5]>0. )
		Z[18] = Y[113]/(sqrt(Z[5]));
	else
		Z[18] = 0.;
	Z[24] = 0.08*Z[3];
	Z[26] = cos(Y[31]);
	Z[34] = sin(Y[31]);
	if( Z[4]>0. )
		Z[38] = Y[112]/(sqrt(Z[4]));
	else
		Z[38] = 0.;
	Z[16] = 0.08*(Z[12]*Y[122]+Z[14]*Y[132]+Z[24]*Z[18]+Z[34]*Y[121]+Z[26]*Y[131]+Z[24]*Z[38])+0.31*(Z[36]+Z[82]+Z[83]+Z[76]+Z[77]+Z[19]+Z[17]-Z[51]-Z[50]-Z[42]-Z[49])+0.155*(Z[16]+Z[28]*Z[71]);
	Z[17] = Z[29]*Z[84]+Z[33]*Z[75];
	V[6] = -0.005*(16.*(Z[14]*Y[122]+Z[2]*Z[18]+Z[26]*Y[121]+Z[1]*Z[38]-Z[12]*Y[132]-Z[34]*Y[131])+31.*(Z[23]*Z[71]+Z[22])+62.*(Z[31]+Z[80]+Z[72]+Z[15]+Z[13]-Z[56]-Z[55]-Z[79]-Z[67]-Z[46]-Z[45]))*Z[3]+0.0036*(Z[87]-Z[92])*Z[9]+Z[16]*Z[0]+Y[141]+Z[8]+Z[30]+Z[35]+Z[48]+Z[90]+Z[86]+Z[85]+Z[70]+Z[63]-Y[25]*Y[139]-Y[13]*Y[133]-Y[15]*Y[134]-0.04*Z[25]+0.12*(Z[94]+Z[93]+Z[89]+Z[88])+0.03*(Z[6]+Z[7])+0.045*(Z[17]-Z[29]*Z[78]-Z[33]*Z[81]);
	DecompCInc(7,M,7,P);
	SolveCInc(7,M,7,P,V);
	YP[28] = V[0];
	YP[30] = V[1];
	YP[50] = V[2];
	YP[52] = V[3];
	YP[54] = V[4];
	Y[130] = V[5];
	Y[140] = V[6];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[31]);
	Z[1] = cos(Y[31]);
	Z[2] = Z[1]*Z[1]+Z[0]*Z[0];
	M[0] = -Y[9]*Z[2];
	Z[3] = Y[32]*Z[1]*Y[9];
	Z[4] = sin(Y[49]);
	Z[5] = cos(Y[49]);
	Z[6] = Y[50]*Y[50];
	Z[3] = (Z[3]+2.*Z[0]*Y[10])*Y[32]-0.08*(YP[50]*Z[4]+Z[6]*Z[5]);
	Z[7] = Y[32]*Z[0]*Y[9];
	Z[4] = -(-Z[7]+2.*Z[1]*Y[10])*Y[32]+0.08*(YP[50]*Z[5]-Z[6]*Z[4]);
	V[0] = Z[0]*Z[3]-Z[1]*Z[4];
	M[8] = -Z[2];
	V[1] = -(Z[3]*Z[1]+Z[4]*Z[0]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[32] = V[0];
	YP[10] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[33]);
	Z[1] = cos(Y[33]);
	Z[2] = Z[1]*Z[1]+Z[0]*Z[0];
	M[0] = -Y[11]*Z[2];
	Z[3] = Y[34]*Z[1]*Y[11];
	Z[4] = sin(Y[49]);
	Z[5] = cos(Y[49]);
	Z[6] = Y[50]*Y[50];
	Z[3] = (Z[3]+2.*Z[0]*Y[12])*Y[34]-0.08*(YP[50]*Z[4]+Z[6]*Z[5]);
	Z[7] = Y[34]*Z[0]*Y[11];
	Z[4] = -(-Z[7]+2.*Z[1]*Y[12])*Y[34]+0.08*(YP[50]*Z[5]-Z[6]*Z[4]);
	V[0] = Z[0]*Z[3]-Z[1]*Z[4];
	M[8] = -Z[2];
	V[1] = -(Z[3]*Z[1]+Z[4]*Z[0]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[34] = V[0];
	YP[12] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[49]);
	Z[1] = cos(Y[35]);
	Z[2] = cos(Y[49]);
	Z[3] = sin(Y[35]);
	Z[4] = Z[0]*Z[1]+Z[3]*Z[2];
	Z[1] = Z[1]*Z[2]-Z[0]*Z[3];
	Z[3] = -Z[4]*Z[4];
	M[0] = -Y[13]*(Z[1]*Z[1]-Z[3]);
	M[1] = 0.;
	Z[5] = 2.*(Y[50]+Y[36]);
	Z[6] = 0.5*Z[5];
	Z[7] = YP[50]+YP[52];
	Z[8] = cos(Y[51]);
	Z[9] = sin(Y[51]);
	Z[10] = Z[0]*Z[8]+Z[2]*Z[9];
	Z[11] = Y[50]+Y[52];
	Z[8] = Z[2]*Z[8]-Z[0]*Z[9];
	Z[9] = Z[11]*Z[11];
	Z[11] = Y[50]*Y[50];
	Z[12] = Z[6]*Z[6];
	Z[13] = (YP[50]*Z[4]-Z[12]*Z[1])*Y[13]+Z[5]*(Z[6]*Z[1]*Y[13]+Z[4]*Y[14])-0.12*(YP[50]*Z[0]+Z[11]*Z[2])-0.03*(Z[7]*Z[10]+Z[8]*Z[9]);
	Z[0] = -(YP[50]*Z[1]+Z[12]*Z[4])*Y[13]+Z[5]*(Z[6]*Z[4]*Y[13]-Z[1]*Y[14])+0.12*(YP[50]*Z[2]-Z[11]*Z[0])+0.03*(Z[7]*Z[8]-Z[9]*Z[10]);
	V[0] = Z[13]*Z[4]-Z[0]*Z[1];
	M[8] = Z[3]-Z[1]*Z[1];
	V[1] = -(Z[13]*Z[1]+Z[4]*Z[0]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[36] = V[0];
	YP[14] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[49]);
	Z[1] = cos(Y[37]);
	Z[2] = cos(Y[49]);
	Z[3] = sin(Y[37]);
	Z[4] = Z[0]*Z[1]+Z[3]*Z[2];
	Z[1] = Z[1]*Z[2]-Z[0]*Z[3];
	Z[3] = -Z[4]*Z[4];
	M[0] = -Y[15]*(Z[1]*Z[1]-Z[3]);
	M[1] = 0.;
	Z[5] = 2.*(Y[50]+Y[38]);
	Z[6] = 0.5*Z[5];
	Z[7] = YP[50]+YP[52];
	Z[8] = cos(Y[51]);
	Z[9] = sin(Y[51]);
	Z[10] = Z[0]*Z[8]+Z[2]*Z[9];
	Z[11] = Y[50]+Y[52];
	Z[8] = Z[2]*Z[8]-Z[0]*Z[9];
	Z[9] = Y[50]*Y[50];
	Z[11] = Z[11]*Z[11];
	Z[12] = Z[6]*Z[6];
	Z[13] = (YP[50]*Z[4]-Z[12]*Z[1])*Y[15]+Z[5]*(Z[6]*Z[1]*Y[15]+Z[4]*Y[16])-0.12*(YP[50]*Z[0]+Z[2]*Z[9])+0.03*(Z[7]*Z[10]+Z[11]*Z[8]);
	Z[0] = -(YP[50]*Z[1]+Z[12]*Z[4])*Y[15]+Z[5]*(Z[6]*Z[4]*Y[15]-Z[1]*Y[16])+0.12*(YP[50]*Z[2]-Z[0]*Z[9])+0.03*(Z[11]*Z[10]-Z[7]*Z[8]);
	V[0] = Z[13]*Z[4]-Z[0]*Z[1];
	M[8] = Z[3]-Z[1]*Z[1];
	V[1] = -(Z[13]*Z[1]+Z[4]*Z[0]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[38] = V[0];
	YP[16] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[39]);
	Z[1] = cos(Y[39]);
	Z[2] = Z[1]*Z[1]+Z[0]*Z[0];
	M[0] = -Y[17]*Z[2];
	Z[3] = sin(Y[49]);
	Z[4] = cos(Y[49]);
	Z[5] = Y[40]*Z[1]*Y[17];
	Z[6] = YP[50]+YP[52];
	Z[7] = cos(Y[51]);
	Z[8] = sin(Y[51]);
	Z[9] = Z[3]*Z[7]+Z[4]*Z[8];
	Z[10] = Y[50]+Y[52];
	Z[7] = Z[4]*Z[7]-Z[3]*Z[8];
	Z[8] = Y[50]*Y[50];
	Z[10] = Z[10]*Z[10];
	Z[5] = (Z[5]+2.*Z[0]*Y[18])*Y[40]-0.045*(Z[6]*Z[9]+Z[7]*Z[10])-0.31*(YP[50]*Z[3]+Z[4]*Z[8]);
	Z[11] = Y[40]*Z[0]*Y[17];
	Z[3] = -(-Z[11]+2.*Z[1]*Y[18])*Y[40]+0.045*(Z[6]*Z[7]-Z[9]*Z[10])+0.31*(YP[50]*Z[4]-Z[3]*Z[8]);
	V[0] = Z[0]*Z[5]-Z[3]*Z[1];
	M[8] = -Z[2];
	V[1] = -(Z[5]*Z[1]+Z[0]*Z[3]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[40] = V[0];
	YP[18] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[41]);
	Z[1] = cos(Y[41]);
	Z[2] = Z[1]*Z[1]+Z[0]*Z[0];
	M[0] = -Y[19]*Z[2];
	Z[3] = sin(Y[49]);
	Z[4] = cos(Y[49]);
	Z[5] = Y[42]*Z[1]*Y[19];
	Z[6] = YP[50]+YP[52];
	Z[7] = cos(Y[51]);
	Z[8] = sin(Y[51]);
	Z[9] = Z[3]*Z[7]+Z[4]*Z[8];
	Z[10] = Y[50]+Y[52];
	Z[7] = Z[4]*Z[7]-Z[3]*Z[8];
	Z[8] = Y[50]*Y[50];
	Z[10] = Z[10]*Z[10];
	Z[5] = (Z[5]+2.*Z[0]*Y[20])*Y[42]+0.045*(Z[6]*Z[9]+Z[7]*Z[10])-0.31*(YP[50]*Z[3]+Z[4]*Z[8]);
	Z[11] = Y[42]*Z[0]*Y[19];
	Z[3] = -(-Z[11]+2.*Z[1]*Y[20])*Y[42]+0.045*(Z[9]*Z[10]-Z[6]*Z[7])+0.31*(YP[50]*Z[4]-Z[3]*Z[8]);
	V[0] = Z[0]*Z[5]-Z[3]*Z[1];
	M[8] = -Z[2];
	V[1] = -(Z[5]*Z[1]+Z[0]*Z[3]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[42] = V[0];
	YP[20] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[49]);
	Z[1] = cos(Y[51]);
	Z[2] = cos(Y[43]);
	Z[3] = sin(Y[51]);
	Z[4] = sin(Y[43]);
	Z[5] = Z[1]*Z[2]-Z[3]*Z[4];
	Z[6] = cos(Y[49]);
	Z[2] = Z[3]*Z[2]+Z[1]*Z[4];
	Z[4] = Z[0]*Z[5]+Z[6]*Z[2];
	Z[7] = -(Z[6]*Z[3]+Z[0]*Z[1]);
	Z[2] = Z[6]*Z[5]-Z[0]*Z[2];
	Z[5] = Z[6]*Z[1]-Z[0]*Z[3];
	M[0] = -Y[21]*(Z[2]*Z[5]-Z[4]*Z[7]);
	Z[8] = -Z[2];
	Z[9] = -Z[4];
	M[1] = Z[7]*Z[8]+Z[9]*Z[5];
	Z[10] = YP[50]+YP[52];
	Z[11] = Y[50]+Y[52];
	Z[12] = YP[50]+YP[54]+YP[52];
	Z[13] = cos(Y[53]);
	Z[14] = sin(Y[53]);
	Z[15] = Z[13]*Z[1]-Z[3]*Z[14];
	Z[1] = Z[13]*Z[3]+Z[1]*Z[14];
	Z[3] = Z[0]*Z[15]+Z[6]*Z[1];
	Z[13] = Y[50]+Y[54]+Y[52];
	Z[1] = Z[6]*Z[15]-Z[0]*Z[1];
	Z[14] = 2.*(Y[50]+Y[44]+Y[52]);
	Z[15] = 0.5*Z[14];
	Z[11] = Z[11]*Z[11];
	Z[13] = Z[13]*Z[13];
	Z[16] = Y[50]*Y[50];
	Z[17] = Z[15]*Z[15];
	Z[18] = -(Z[17]*Z[2]-Z[10]*Z[4])*Y[21]+Z[14]*(Z[15]*Z[2]*Y[21]+Z[4]*Y[22])+YP[30]+0.005*(Z[11]*Z[5]-Z[7]*Z[10])+0.065*(Z[12]*Z[3]+Z[13]*Z[1])+0.31*(YP[50]*Z[0]+Z[16]*Z[6]);
	Z[0] = -(Z[10]*Z[2]+Z[17]*Z[4])*Y[21]+YP[28]+Z[14]*(Z[15]*Z[4]*Y[21]-Z[2]*Y[22])-0.005*(Z[10]*Z[5]+Z[11]*Z[7])+0.065*(Z[13]*Z[3]-Z[12]*Z[1])+0.31*(Z[16]*Z[0]-YP[50]*Z[6]);
	V[0] = -(Z[18]*Z[7]+Z[0]*Z[5]);
	M[7] = Y[21]*(Z[4]*Z[5]+Z[2]*Z[7]);
	M[8] = Z[8]*Z[5]-Z[9]*Z[7];
	V[1] = Z[0]*Z[7]-Z[18]*Z[5];
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[44] = V[0];
	YP[22] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[49]);
	Z[1] = cos(Y[51]);
	Z[2] = cos(Y[45]);
	Z[3] = sin(Y[51]);
	Z[4] = sin(Y[45]);
	Z[5] = Z[1]*Z[2]-Z[3]*Z[4];
	Z[6] = cos(Y[49]);
	Z[2] = Z[3]*Z[2]+Z[1]*Z[4];
	Z[4] = Z[0]*Z[5]+Z[6]*Z[2];
	Z[7] = -(Z[6]*Z[3]+Z[0]*Z[1]);
	Z[2] = Z[6]*Z[5]-Z[0]*Z[2];
	Z[5] = Z[6]*Z[1]-Z[0]*Z[3];
	M[0] = -Y[23]*(Z[2]*Z[5]-Z[4]*Z[7]);
	Z[8] = -Z[2];
	Z[9] = -Z[4];
	M[1] = Z[7]*Z[8]+Z[9]*Z[5];
	Z[10] = YP[50]+YP[52];
	Z[11] = Y[50]+Y[52];
	Z[12] = YP[50]+YP[54]+YP[52];
	Z[13] = cos(Y[53]);
	Z[14] = sin(Y[53]);
	Z[15] = Z[13]*Z[1]-Z[3]*Z[14];
	Z[1] = Z[13]*Z[3]+Z[1]*Z[14];
	Z[3] = Z[0]*Z[15]+Z[6]*Z[1];
	Z[13] = Y[50]+Y[54]+Y[52];
	Z[1] = Z[6]*Z[15]-Z[0]*Z[1];
	Z[14] = 2.*(Y[50]+Y[46]+Y[52]);
	Z[15] = 0.5*Z[14];
	Z[16] = Z[15]*Z[15];
	Z[11] = Z[11]*Z[11];
	Z[17] = Y[50]*Y[50];
	Z[13] = Z[13]*Z[13];
	Z[18] = -(Z[16]*Z[2]-Z[10]*Z[4])*Y[23]+Z[14]*(Z[15]*Z[2]*Y[23]+Z[4]*Y[24])+YP[30]+0.025*(Z[7]*Z[10]-Z[11]*Z[5])+0.15*(Z[12]*Z[3]+Z[13]*Z[1])+0.31*(YP[50]*Z[0]+Z[17]*Z[6]);
	Z[0] = -(Z[10]*Z[2]+Z[16]*Z[4])*Y[23]+YP[28]+Z[14]*(Z[15]*Z[4]*Y[23]-Z[2]*Y[24])+0.025*(Z[10]*Z[5]+Z[11]*Z[7])+0.15*(Z[13]*Z[3]-Z[12]*Z[1])+0.31*(Z[17]*Z[0]-YP[50]*Z[6]);
	V[0] = -(Z[18]*Z[7]+Z[0]*Z[5]);
	M[7] = Y[23]*(Z[4]*Z[5]+Z[2]*Z[7]);
	M[8] = Z[8]*Z[5]-Z[9]*Z[7];
	V[1] = Z[0]*Z[7]-Z[18]*Z[5];
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[46] = V[0];
	YP[24] = V[1];
	for(ti1=1;ti1<=2;ti1++)
		for(ti2=1;ti2<=2;ti2++)
			M[(ti1-1)*7+ti2-1] = 0.;
	for(ti1=1;ti1<=2;ti1++)
		V[ti1-1] = 0.;
	Z[0] = sin(Y[49]);
	Z[1] = cos(Y[47]);
	Z[2] = cos(Y[49]);
	Z[3] = sin(Y[47]);
	Z[4] = Z[0]*Z[1]+Z[3]*Z[2];
	Z[1] = Z[1]*Z[2]-Z[0]*Z[3];
	Z[3] = -Z[4]*Z[4];
	M[0] = -Y[25]*(Z[1]*Z[1]-Z[3]);
	M[1] = 0.;
	Z[5] = YP[50]+YP[54]+YP[52];
	Z[6] = cos(Y[51]);
	Z[7] = cos(Y[53]);
	Z[8] = sin(Y[51]);
	Z[9] = sin(Y[53]);
	Z[10] = Z[6]*Z[7]-Z[8]*Z[9];
	Z[6] = Z[6]*Z[9]+Z[7]*Z[8];
	Z[7] = Z[0]*Z[10]+Z[6]*Z[2];
	Z[8] = Y[50]+Y[54]+Y[52];
	Z[6] = Z[10]*Z[2]-Z[0]*Z[6];
	Z[9] = 2.*(Y[50]+Y[48]);
	Z[10] = 0.5*Z[9];
	Z[8] = Z[8]*Z[8];
	Z[11] = Z[10]*Z[10];
	Z[12] = Y[50]*Y[50];
	Z[13] = (YP[50]*Z[4]-Z[11]*Z[1])*Y[25]+Z[9]*(Z[10]*Z[1]*Y[25]+Z[4]*Y[26])+YP[30]+0.07*(Z[5]*Z[7]+Z[8]*Z[6])+0.27*(YP[50]*Z[0]+Z[12]*Z[2]);
	Z[0] = -(YP[50]*Z[1]+Z[11]*Z[4])*Y[25]+YP[28]+Z[9]*(Z[10]*Z[4]*Y[25]-Z[1]*Y[26])+0.07*(Z[7]*Z[8]-Z[6]*Z[5])+0.27*(Z[12]*Z[0]-YP[50]*Z[2]);
	V[0] = Z[13]*Z[4]-Z[0]*Z[1];
	M[8] = Z[3]-Z[1]*Z[1];
	V[1] = -(Z[13]*Z[1]+Z[4]*Z[0]);
	DecompCInc(2,M,7,P);
	SolveCInc(2,M,7,P,V);
	YP[48] = V[0];
	YP[26] = V[1];
}

static void Rp(double T, double *Y, double *R)
{
	double Z[32];

	Z[0] = sin(Y[49]);
	Z[1] = Y[50]+Y[52];
	Z[2] = cos(Y[51]);
	Z[3] = cos(Y[49]);
	Z[4] = sin(Y[51]);
	Z[5] = Z[0]*Z[2]+Z[3]*Z[4];
	Z[6] = Y[50]+Y[54]+Y[52];
	Z[7] = cos(Y[53]);
	Z[8] = sin(Y[53]);
	Z[9] = Z[2]*Z[7]-Z[4]*Z[8];
	Z[7] = Z[4]*Z[7]+Z[2]*Z[8];
	Z[8] = Z[0]*Z[9]+Z[3]*Z[7];
	Z[10] = 0.31*Z[0];
	Z[11] = Z[10]*Y[50];
	Z[12] = 0.225*Z[1];
	Z[13] = 0.1*Z[6];
	Z[14] = Z[11]+Z[12]*Z[5]+Z[13]*Z[8]+Y[30];
	Z[15] = Z[3]*Z[2]-Z[4]*Z[0];
	Z[16] = Z[3]*Z[9]-Z[0]*Z[7];
	Z[17] = 0.31*Z[3];
	Z[18] = Z[17]*Y[50];
	Z[12] = Y[28]-Z[18]-Z[12]*Z[15]-Z[13]*Z[16];
	R[0] = Z[14]*Z[15]+Z[12]*Z[5];
	Z[13] = -0.09*Z[2]-0.155;
	Z[19] = Z[13]-0.1*Z[9]-0.135*Z[2]-0.155;
	Z[20] = 0.1*Z[7]+0.225*Z[4];
	Z[21] = Z[20]*Z[0]+Z[19]*Z[3]+Y[29];
	Z[19] = Z[19]*Z[0]+Y[27]-Z[20]*Z[3];
	R[1] = Z[21]*Z[15]+Z[19]*Z[5];
	Z[20] = -Z[5];
	R[2] = Z[14]*Z[20]+Z[12]*Z[15];
	R[3] = Z[21]*Z[20]+Z[19]*Z[15];
	Z[12] = sin(Y[31]);
	Z[14] = cos(Y[31]);
	Z[19] = 0.08*Z[0];
	Z[21] = Z[19]*Y[50];
	Z[22] = Z[12]*Y[9];
	Z[23] = Z[22]*Y[32]-Z[14]*Y[10]-Z[21];
	Z[24] = 0.08*Z[3];
	Z[25] = Z[24]*Y[50];
	Z[26] = Z[14]*Y[9];
	Z[27] = Z[25]-Z[26]*Y[32]-Z[12]*Y[10];
	R[4] = Z[27]*Z[14]-Z[23]*Z[12];
	Z[26] = Z[24]-Z[26]+0.055;
	Z[22] = Z[19]-Z[22];
	R[5] = Z[22]*Z[14]-Z[26]*Z[12];
	R[6] = Z[23]*Z[14]+Z[27]*Z[12];
	R[7] = Z[26]*Z[14]+Z[22]*Z[12];
	Z[12] = sin(Y[33]);
	Z[14] = cos(Y[33]);
	Z[22] = Z[12]*Y[11];
	Z[21] = Z[22]*Y[34]-Z[14]*Y[12]-Z[21];
	Z[23] = Z[14]*Y[11];
	Z[25] = Z[25]-Z[23]*Y[34]-Z[12]*Y[12];
	R[8] = Z[25]*Z[14]-Z[21]*Z[12];
	Z[23] = Z[24]-Z[23]-0.055;
	Z[19] = Z[19]-Z[22];
	R[9] = Z[19]*Z[14]-Z[23]*Z[12];
	R[10] = Z[21]*Z[14]+Z[25]*Z[12];
	R[11] = Z[23]*Z[14]+Z[19]*Z[12];
	Z[12] = Y[50]+Y[36];
	Z[14] = cos(Y[35]);
	Z[19] = sin(Y[35]);
	Z[21] = Z[0]*Z[14]+Z[19]*Z[3];
	Z[22] = Z[3]*Z[14]-Z[19]*Z[0];
	Z[23] = 0.12*Y[50];
	Z[24] = Z[23]*Z[0];
	Z[25] = 0.03*Z[1];
	Z[26] = Z[25]*Z[5];
	Z[27] = Z[21]*Z[12]*Y[13]-Z[22]*Y[14]-Z[24]-Z[26];
	Z[23] = Z[23]*Z[3];
	Z[25] = Z[25]*Z[15];
	Z[12] = Z[23]+Z[25]-Z[22]*Z[12]*Y[13]-Z[21]*Y[14];
	R[12] = Z[22]*Z[12]-Z[27]*Z[21];
	Z[28] = 0.03*Z[2];
	Z[29] = Z[28]-Z[14]*Y[13]+0.12;
	Z[30] = 0.03*Z[4];
	Z[31] = Z[30]-Z[19]*Y[13];
	R[13] = Z[31]*Z[14]-Z[29]*Z[19];
	R[14] = Z[27]*Z[22]+Z[21]*Z[12];
	R[15] = Z[29]*Z[14]+Z[31]*Z[19];
	Z[12] = Y[50]+Y[38];
	Z[14] = cos(Y[37]);
	Z[19] = sin(Y[37]);
	Z[21] = Z[0]*Z[14]+Z[19]*Z[3];
	Z[22] = Z[3]*Z[14]-Z[19]*Z[0];
	Z[24] = Z[21]*Z[12]*Y[15]+Z[26]-Z[22]*Y[16]-Z[24];
	Z[12] = Z[23]-Z[22]*Z[12]*Y[15]-Z[21]*Y[16]-Z[25];
	R[16] = Z[22]*Z[12]-Z[24]*Z[21];
	Z[23] = -(Z[14]*Y[15]+Z[28])+0.12;
	Z[25] = -(Z[19]*Y[15]+Z[30]);
	R[17] = Z[25]*Z[14]-Z[23]*Z[19];
	R[18] = Z[24]*Z[22]+Z[21]*Z[12];
	R[19] = Z[23]*Z[14]+Z[25]*Z[19];
	Z[12] = sin(Y[39]);
	Z[14] = cos(Y[39]);
	Z[19] = 0.045*Z[5];
	Z[21] = Z[19]*Z[1];
	Z[22] = Z[12]*Y[17];
	Z[23] = Z[22]*Y[40]-Z[11]-Z[14]*Y[18]-Z[21];
	Z[24] = 0.045*Z[15];
	Z[25] = Z[24]*Z[1];
	Z[26] = Z[14]*Y[17];
	Z[27] = Z[18]+Z[25]-Z[26]*Y[40]-Z[12]*Y[18];
	R[20] = Z[27]*Z[14]-Z[23]*Z[12];
	Z[26] = Z[24]+Z[17]-Z[26]+0.04;
	Z[22] = Z[19]+Z[10]-Z[22];
	R[21] = Z[22]*Z[14]-Z[26]*Z[12];
	R[22] = Z[23]*Z[14]+Z[27]*Z[12];
	R[23] = Z[26]*Z[14]+Z[22]*Z[12];
	Z[12] = sin(Y[41]);
	Z[14] = cos(Y[41]);
	Z[22] = Z[12]*Y[19];
	Z[21] = Z[22]*Y[42]+Z[21]-Z[11]-Z[14]*Y[20];
	Z[23] = Z[14]*Y[19];
	Z[25] = Z[18]-Z[23]*Y[42]-Z[12]*Y[20]-Z[25];
	R[24] = Z[25]*Z[14]-Z[21]*Z[12];
	Z[17] = Z[17]-Z[24]-Z[23]-0.04;
	Z[10] = Z[10]-Z[19]-Z[22];
	R[25] = Z[10]*Z[14]-Z[17]*Z[12];
	R[26] = Z[21]*Z[14]+Z[25]*Z[12];
	R[27] = Z[17]*Z[14]+Z[10]*Z[12];
	Z[10] = Y[50]+Y[44]+Y[52];
	Z[12] = cos(Y[43]);
	Z[14] = sin(Y[43]);
	Z[17] = Z[12]*Z[2]-Z[4]*Z[14];
	Z[12] = Z[4]*Z[12]+Z[2]*Z[14];
	Z[14] = Z[17]*Z[0]+Z[12]*Z[3];
	Z[12] = Z[3]*Z[17]-Z[12]*Z[0];
	Z[17] = 0.065*Z[6];
	Z[19] = 0.005*Z[1];
	Z[21] = Z[14]*Y[21];
	Z[22] = Z[11]+Z[19]*Z[5]+Z[17]*Z[8]+Z[21]*Z[10]+Y[30]-Z[12]*Y[22];
	Z[12] = Z[12]*Y[21];
	Z[10] = Y[28]-Z[18]-Z[19]*Z[15]-Z[17]*Z[16]-Z[10]*Z[12]-Z[14]*Y[22];
	R[28] = Z[22]*Z[20]+Z[10]*Z[15];
	Z[14] = Z[13]-0.065*Z[9]+0.085*Z[2]-0.155;
	Z[17] = 0.005*Z[4]+0.065*Z[7];
	Z[12] = Z[17]*Z[0]+Z[3]*Z[14]+Y[29]-Z[12];
	Z[14] = Z[0]*Z[14]+Y[27]-Z[3]*Z[17]-Z[21];
	R[29] = Z[12]*Z[20]+Z[14]*Z[15];
	R[30] = Z[22]*Z[15]+Z[10]*Z[5];
	R[31] = Z[12]*Z[15]+Z[14]*Z[5];
	Z[10] = Y[50]+Y[46]+Y[52];
	Z[12] = cos(Y[45]);
	Z[14] = sin(Y[45]);
	Z[17] = Z[12]*Z[2]-Z[4]*Z[14];
	Z[12] = Z[4]*Z[12]+Z[2]*Z[14];
	Z[14] = Z[17]*Z[0]+Z[12]*Z[3];
	Z[12] = Z[3]*Z[17]-Z[12]*Z[0];
	Z[17] = 0.15*Z[6];
	Z[1] = 0.025*Z[1];
	Z[19] = Z[14]*Y[23];
	Z[11] = Z[11]+Z[17]*Z[8]+Z[19]*Z[10]+Y[30]-Z[5]*Z[1]-Z[12]*Y[24];
	Z[12] = Z[12]*Y[23];
	Z[1] = Z[1]*Z[15]+Y[28]-Z[18]-Z[17]*Z[16]-Z[10]*Z[12]-Z[14]*Y[24];
	R[32] = Z[11]*Z[20]+Z[1]*Z[15];
	Z[2] = Z[13]-0.15*Z[9]+0.115*Z[2]-0.155;
	Z[4] = -0.025*Z[4]+0.15*Z[7];
	Z[7] = Z[4]*Z[0]+Z[3]*Z[2]+Y[29]-Z[12];
	Z[2] = Z[0]*Z[2]+Y[27]-Z[3]*Z[4]-Z[19];
	R[33] = Z[7]*Z[20]+Z[15]*Z[2];
	R[34] = Z[11]*Z[15]+Z[5]*Z[1];
	R[35] = Z[7]*Z[15]+Z[2]*Z[5];
	Z[1] = Y[50]+Y[48];
	Z[2] = cos(Y[47]);
	Z[4] = sin(Y[47]);
	Z[5] = Z[0]*Z[2]+Z[3]*Z[4];
	Z[2] = Z[3]*Z[2]-Z[4]*Z[0];
	Z[4] = 0.07*Z[8];
	Z[0] = 0.27*Z[0];
	Z[7] = Z[5]*Y[25];
	Z[8] = Z[0]*Y[50]+Z[6]*Z[4]+Z[7]*Z[1]+Y[30]-Z[2]*Y[26];
	Z[9] = -Z[5];
	Z[10] = 0.07*Z[16];
	Z[3] = 0.27*Z[3];
	Z[11] = Z[2]*Y[25];
	Z[1] = Y[28]-Z[3]*Y[50]-Z[10]*Z[6]-Z[11]*Z[1]-Z[5]*Y[26];
	R[36] = Z[8]*Z[9]+Z[1]*Z[2];
	Z[3] = Y[29]-Z[11]-Z[3]-Z[10];
	Z[0] = Y[27]-Z[7]-Z[0]-Z[4];
	R[37] = Z[3]*Z[9]+Z[0]*Z[2];
	R[38] = Z[2]*Z[8]+Z[5]*Z[1];
	R[39] = Z[3]*Z[2]+Z[0]*Z[5];
}

static void Jp(double T, double *Y, double *J)
{
	double Z[59];

	J[0] = 0.;
	J[1] = 0.;
	J[2] = 0.;
	J[3] = 0.;
	J[4] = 0.;
	J[5] = 0.;
	J[6] = 0.;
	J[7] = 0.;
	J[8] = 0.;
	J[9] = 0.;
	J[10] = 0.;
	J[11] = 0.;
	J[12] = 0.;
	J[13] = 0.;
	J[14] = 0.;
	J[15] = 0.;
	J[16] = 0.;
	J[17] = 0.;
	J[18] = 0.;
	J[19] = 0.;
	J[20] = 0.;
	J[21] = 0.;
	J[22] = 0.;
	J[23] = 0.;
	J[24] = 0.;
	J[25] = 0.;
	J[26] = 0.;
	J[27] = 0.;
	Z[0] = sin(Y[49]);
	Z[1] = cos(Y[51]);
	Z[2] = cos(Y[49]);
	Z[3] = sin(Y[51]);
	Z[4] = Z[0]*Z[1]+Z[3]*Z[2];
	J[28] = Z[4];
	J[29] = 0.;
	Z[5] = Z[1]*Z[2]-Z[0]*Z[3];
	J[30] = Z[5];
	J[31] = 0.;
	J[32] = 0.;
	J[33] = 0.;
	J[34] = 0.;
	J[35] = 0.;
	J[36] = 0.;
	J[37] = 0.;
	J[38] = 0.;
	J[39] = 0.;
	J[40] = 0.;
	J[41] = 0.;
	J[42] = 0.;
	J[43] = 0.;
	J[44] = 0.;
	J[45] = 0.;
	J[46] = 0.;
	J[47] = 0.;
	J[48] = 0.;
	Z[6] = Y[50]+Y[52];
	Z[7] = Y[50]+Y[54]+Y[52];
	Z[8] = cos(Y[53]);
	Z[9] = sin(Y[53]);
	Z[10] = Z[1]*Z[8]-Z[3]*Z[9];
	Z[8] = Z[3]*Z[8]+Z[1]*Z[9];
	Z[9] = Z[10]*Z[2];
	Z[11] = Z[9]-Z[0]*Z[8];
	Z[12] = 0.225*Z[5];
	Z[13] = Z[12]*Z[6];
	Z[14] = 0.31*Z[2];
	Z[15] = Z[14]*Y[50];
	Z[16] = 0.1*Z[11];
	Z[17] = Z[16]*Z[7];
	Z[18] = Z[0]*Z[10];
	Z[19] = Z[18]+Z[2]*Z[8];
	Z[20] = 0.31*Z[0];
	Z[21] = Z[20]*Y[50];
	Z[22] = 0.1*Z[19];
	Z[23] = 0.225*Z[4];
	Z[24] = Z[21]+Z[23]*Z[6]+Z[22]*Z[7]+Y[30];
	Z[25] = -Z[4];
	Z[26] = -Z[19];
	Z[27] = 0.225*Z[6]*Z[25];
	Z[28] = 0.1*Z[7];
	Z[29] = Z[21]-Z[27]-Z[28]*Z[26];
	Z[30] = Y[28]-Z[13]-Z[15]-Z[17];
	Z[17] = Z[13]+Z[15]+Z[17]+Z[30];
	Z[31] = Z[24]*Z[25];
	J[49] = Z[17]*Z[5]+Z[31]+Z[29]*Z[4];
	Z[32] = 0.225*Z[1];
	Z[33] = 0.1*Z[10];
	Z[34] = Z[33]+Z[32]+0.31;
	Z[35] = 0.1*Z[8]+0.225*Z[3];
	Z[36] = Z[35]*Z[2];
	Z[37] = Z[34]*Z[0]+Z[36];
	Z[35] = Z[35]*Z[0];
	Z[34] = Z[35]-Z[34]*Z[2];
	J[50] = Z[37]*Z[5]+Z[34]*Z[4];
	Z[9] = Z[9]-Z[0]*Z[8];
	Z[18] = -(Z[18]+Z[2]*Z[8]);
	Z[27] = -(Z[27]+Z[28]*Z[18]);
	Z[13] = Z[13]+Z[28]*Z[9]+Z[30];
	J[51] = Z[13]*Z[5]+Z[31]+Z[27]*Z[4];
	Z[30] = Z[23]+Z[22];
	Z[31] = Z[35]-(Z[33]+Z[32])*Z[2];
	J[52] = Z[30]*Z[5]+Z[31]*Z[4];
	Z[32] = -Z[28]*(Z[18]*Z[4]-Z[9]*Z[5]);
	J[53] = Z[32];
	Z[16] = -Z[16];
	J[54] = Z[22]*Z[5]+Z[16]*Z[4];
	J[55] = 0.;
	J[56] = 0.;
	J[57] = 0.;
	J[58] = 0.;
	J[59] = 0.;
	J[60] = 0.;
	J[61] = 0.;
	J[62] = 0.;
	J[63] = 0.;
	J[64] = 0.;
	J[65] = 0.;
	J[66] = 0.;
	J[67] = 0.;
	J[68] = 0.;
	J[69] = 0.;
	J[70] = 0.;
	J[71] = 0.;
	J[72] = 0.;
	J[73] = 0.;
	J[74] = 0.;
	J[75] = 0.;
	J[76] = 0.;
	J[77] = 0.;
	J[78] = 0.;
	J[79] = 0.;
	J[80] = 0.;
	J[81] = 0.;
	J[82] = Z[4];
	J[83] = 0.;
	J[84] = Z[5];
	J[85] = 0.;
	J[86] = 0.;
	J[87] = 0.;
	J[88] = 0.;
	J[89] = 0.;
	J[90] = 0.;
	J[91] = 0.;
	J[92] = 0.;
	J[93] = 0.;
	J[94] = 0.;
	J[95] = 0.;
	J[96] = 0.;
	J[97] = 0.;
	J[98] = 0.;
	J[99] = 0.;
	J[100] = 0.;
	J[101] = 0.;
	J[102] = 0.;
	J[103] = 0.;
	Z[38] = -0.09*Z[1]-0.155;
	Z[33] = Z[33]-Z[38]+0.135*Z[1]+0.155;
	Z[39] = Z[33]*Z[0];
	Z[33] = Z[33]*Z[2];
	Z[40] = Z[35]+Y[29]-Z[33];
	Z[33] = Z[35]-Z[33];
	Z[35] = Y[27]-Z[39]-Z[36];
	Z[36] = Z[39]+Z[36]+Z[35];
	Z[39] = Z[40]*Z[25];
	J[104] = Z[36]*Z[5]+Z[39]+Z[33]*Z[4];
	J[105] = 0.;
	Z[41] = 0.1*Z[18];
	Z[42] = 0.1*Z[9];
	Z[12] = -(Z[12]+Z[42]);
	Z[23] = Z[23]+Z[35]-Z[41];
	J[106] = Z[23]*Z[5]+Z[39]+Z[4]*Z[12];
	J[107] = 0.;
	Z[35] = -Z[41];
	Z[39] = -Z[42];
	J[108] = Z[35]*Z[5]+Z[39]*Z[4];
	J[109] = 0.;
	J[110] = 0.;
	J[111] = 0.;
	J[112] = 0.;
	J[113] = 0.;
	J[114] = 0.;
	J[115] = 0.;
	J[116] = 0.;
	J[117] = 0.;
	J[118] = 0.;
	J[119] = 0.;
	J[120] = 0.;
	J[121] = 0.;
	J[122] = 0.;
	J[123] = 0.;
	J[124] = 0.;
	J[125] = 0.;
	J[126] = 0.;
	J[127] = 0.;
	J[128] = 0.;
	J[129] = 0.;
	J[130] = 0.;
	J[131] = 0.;
	J[132] = 0.;
	J[133] = 0.;
	J[134] = 0.;
	J[135] = 0.;
	J[136] = 0.;
	J[137] = 0.;
	J[138] = Z[5];
	J[139] = 0.;
	J[140] = Z[25];
	J[141] = 0.;
	J[142] = 0.;
	J[143] = 0.;
	J[144] = 0.;
	J[145] = 0.;
	J[146] = 0.;
	J[147] = 0.;
	J[148] = 0.;
	J[149] = 0.;
	J[150] = 0.;
	J[151] = 0.;
	J[152] = 0.;
	J[153] = 0.;
	J[154] = 0.;
	J[155] = 0.;
	J[156] = 0.;
	J[157] = 0.;
	J[158] = 0.;
	Z[41] = -Z[5];
	Z[24] = Z[24]*Z[41];
	J[159] = Z[17]*Z[25]+Z[24]+Z[29]*Z[5];
	J[160] = Z[37]*Z[25]+Z[34]*Z[5];
	J[161] = Z[13]*Z[25]+Z[24]+Z[27]*Z[5];
	J[162] = Z[30]*Z[25]+Z[31]*Z[5];
	Z[13] = -Z[28]*(Z[18]*Z[5]-Z[9]*Z[25]);
	J[163] = Z[13];
	J[164] = Z[22]*Z[25]+Z[16]*Z[5];
	J[165] = 0.;
	J[166] = 0.;
	J[167] = 0.;
	J[168] = 0.;
	J[169] = 0.;
	J[170] = 0.;
	J[171] = 0.;
	J[172] = 0.;
	J[173] = 0.;
	J[174] = 0.;
	J[175] = 0.;
	J[176] = 0.;
	J[177] = 0.;
	J[178] = 0.;
	J[179] = 0.;
	J[180] = 0.;
	J[181] = 0.;
	J[182] = 0.;
	J[183] = 0.;
	J[184] = 0.;
	J[185] = 0.;
	J[186] = 0.;
	J[187] = 0.;
	J[188] = 0.;
	J[189] = 0.;
	J[190] = 0.;
	J[191] = 0.;
	J[192] = Z[5];
	J[193] = 0.;
	J[194] = Z[25];
	J[195] = 0.;
	J[196] = 0.;
	J[197] = 0.;
	J[198] = 0.;
	J[199] = 0.;
	J[200] = 0.;
	J[201] = 0.;
	J[202] = 0.;
	J[203] = 0.;
	J[204] = 0.;
	J[205] = 0.;
	J[206] = 0.;
	J[207] = 0.;
	J[208] = 0.;
	J[209] = 0.;
	J[210] = 0.;
	J[211] = 0.;
	J[212] = 0.;
	J[213] = 0.;
	Z[16] = Z[40]*Z[41];
	J[214] = Z[36]*Z[25]+Z[16]+Z[33]*Z[5];
	J[215] = 0.;
	J[216] = Z[23]*Z[25]+Z[16]+Z[12]*Z[5];
	J[217] = 0.;
	J[218] = Z[35]*Z[25]+Z[39]*Z[5];
	J[219] = 0.;
	J[220] = 0.;
	J[221] = 0.;
	J[222] = 0.;
	J[223] = 0.;
	J[224] = 0.;
	J[225] = 0.;
	J[226] = 0.;
	J[227] = 0.;
	J[228] = 0.;
	Z[12] = sin(Y[31]);
	Z[16] = cos(Y[31]);
	Z[17] = Z[16]*Z[16];
	Z[22] = Z[12]*Z[12];
	Z[23] = Z[22]+Z[17];
	J[229] = -Y[32]*Z[23];
	J[230] = 0.;
	J[231] = 0.;
	J[232] = 0.;
	J[233] = 0.;
	J[234] = 0.;
	J[235] = 0.;
	J[236] = 0.;
	J[237] = 0.;
	J[238] = 0.;
	J[239] = 0.;
	J[240] = 0.;
	J[241] = 0.;
	J[242] = 0.;
	J[243] = 0.;
	J[244] = 0.;
	J[245] = 0.;
	J[246] = 0.;
	J[247] = 0.;
	J[248] = 0.;
	J[249] = 0.;
	J[250] = 0.;
	Z[24] = Z[12]*Y[10];
	Z[27] = Z[16]*Y[9];
	Z[28] = Z[27]*Y[32];
	Z[29] = Z[16]*Y[10];
	Z[30] = Z[12]*Y[9];
	Z[31] = Z[30]*Y[32];
	Z[33] = 0.08*Z[0];
	Z[34] = Z[33]*Y[50];
	Z[35] = 0.08*Z[2];
	Z[36] = Z[35]*Y[50];
	J[251] = Z[34]*Z[16]-Z[36]*Z[12];
	J[252] = -Y[9]*Z[23];
	J[253] = 0.;
	J[254] = 0.;
	J[255] = 0.;
	J[256] = 0.;
	J[257] = 0.;
	J[258] = 0.;
	J[259] = 0.;
	J[260] = 0.;
	J[261] = 0.;
	J[262] = 0.;
	J[263] = 0.;
	J[264] = 0.;
	J[265] = 0.;
	J[266] = 0.;
	J[267] = 0.;
	J[268] = 0.;
	Z[24] = 0.08*(Z[12]*Z[2]-Z[0]*Z[16]);
	J[269] = Z[24]*Y[50];
	Z[28] = 0.08*(Z[12]*Z[0]+Z[2]*Z[16]);
	J[270] = Z[28];
	J[271] = 0.;
	J[272] = 0.;
	J[273] = 0.;
	J[274] = 0.;
	J[275] = 0.;
	J[276] = 0.;
	J[277] = 0.;
	J[278] = 0.;
	J[279] = 0.;
	J[280] = 0.;
	J[281] = 0.;
	J[282] = 0.;
	J[283] = 0.;
	J[284] = 0.;
	J[285] = 0.;
	J[286] = 0.;
	J[287] = 0.;
	J[288] = 0.;
	J[289] = 0.;
	J[290] = 0.;
	J[291] = 0.;
	J[292] = 0.;
	J[293] = 0.;
	J[294] = 0.;
	J[295] = 0.;
	J[296] = 0.;
	J[297] = 0.;
	J[298] = 0.;
	J[299] = 0.;
	J[300] = 0.;
	J[301] = 0.;
	J[302] = 0.;
	J[303] = 0.;
	J[304] = 0.;
	J[305] = 0.;
	Z[27] = Z[35]-Z[27]+0.055;
	Z[29] = Z[33]-Z[30];
	J[306] = -(Z[22]*Y[9]+Z[27]*Z[16]+Z[17]*Y[9]+Z[29]*Z[12]);
	J[307] = 0.;
	J[308] = 0.;
	J[309] = 0.;
	J[310] = 0.;
	J[311] = 0.;
	J[312] = 0.;
	J[313] = 0.;
	J[314] = 0.;
	J[315] = 0.;
	J[316] = 0.;
	J[317] = 0.;
	J[318] = 0.;
	J[319] = 0.;
	J[320] = 0.;
	J[321] = 0.;
	J[322] = 0.;
	J[323] = 0.;
	J[324] = Z[28];
	J[325] = 0.;
	J[326] = 0.;
	J[327] = 0.;
	J[328] = 0.;
	J[329] = 0.;
	J[330] = 0.;
	J[331] = 0.;
	J[332] = 0.;
	J[333] = 0.;
	J[334] = 0.;
	J[335] = 0.;
	J[336] = 0.;
	J[337] = 0.;
	J[338] = 0.;
	J[339] = 0.;
	Z[17] = -Z[23];
	J[340] = Z[17];
	J[341] = 0.;
	J[342] = 0.;
	J[343] = 0.;
	J[344] = 0.;
	J[345] = 0.;
	J[346] = 0.;
	J[347] = 0.;
	J[348] = 0.;
	J[349] = 0.;
	J[350] = 0.;
	J[351] = 0.;
	J[352] = 0.;
	J[353] = 0.;
	J[354] = 0.;
	J[355] = 0.;
	J[356] = 0.;
	J[357] = 0.;
	J[358] = 0.;
	J[359] = 0.;
	J[360] = 0.;
	J[361] = Z[34]*Z[12]+Z[36]*Z[16];
	J[362] = 0.;
	J[363] = 0.;
	J[364] = 0.;
	J[365] = 0.;
	J[366] = 0.;
	J[367] = 0.;
	J[368] = 0.;
	J[369] = 0.;
	J[370] = 0.;
	J[371] = 0.;
	J[372] = 0.;
	J[373] = 0.;
	J[374] = 0.;
	J[375] = 0.;
	J[376] = 0.;
	J[377] = 0.;
	J[378] = 0.;
	J[379] = -Z[28]*Y[50];
	J[380] = Z[24];
	J[381] = 0.;
	J[382] = 0.;
	J[383] = 0.;
	J[384] = 0.;
	J[385] = 0.;
	J[386] = 0.;
	J[387] = 0.;
	J[388] = 0.;
	J[389] = 0.;
	J[390] = 0.;
	J[391] = 0.;
	J[392] = 0.;
	J[393] = 0.;
	J[394] = Z[17];
	J[395] = 0.;
	J[396] = 0.;
	J[397] = 0.;
	J[398] = 0.;
	J[399] = 0.;
	J[400] = 0.;
	J[401] = 0.;
	J[402] = 0.;
	J[403] = 0.;
	J[404] = 0.;
	J[405] = 0.;
	J[406] = 0.;
	J[407] = 0.;
	J[408] = 0.;
	J[409] = 0.;
	J[410] = 0.;
	J[411] = 0.;
	J[412] = 0.;
	J[413] = 0.;
	J[414] = 0.;
	J[415] = 0.;
	J[416] = Z[29]*Z[16]-Z[27]*Z[12];
	J[417] = 0.;
	J[418] = 0.;
	J[419] = 0.;
	J[420] = 0.;
	J[421] = 0.;
	J[422] = 0.;
	J[423] = 0.;
	J[424] = 0.;
	J[425] = 0.;
	J[426] = 0.;
	J[427] = 0.;
	J[428] = 0.;
	J[429] = 0.;
	J[430] = 0.;
	J[431] = 0.;
	J[432] = 0.;
	J[433] = 0.;
	J[434] = Z[24];
	J[435] = 0.;
	J[436] = 0.;
	J[437] = 0.;
	J[438] = 0.;
	J[439] = 0.;
	J[440] = 0.;
	J[441] = 0.;
	J[442] = 0.;
	J[443] = 0.;
	J[444] = 0.;
	J[445] = 0.;
	J[446] = 0.;
	J[447] = 0.;
	J[448] = 0.;
	J[449] = 0.;
	J[450] = 0.;
	Z[12] = sin(Y[33]);
	Z[16] = cos(Y[33]);
	Z[17] = Z[12]*Z[12];
	Z[22] = Z[16]*Z[16];
	Z[23] = Z[22]+Z[17];
	J[451] = -Z[23]*Y[34];
	J[452] = 0.;
	J[453] = 0.;
	J[454] = 0.;
	J[455] = 0.;
	J[456] = 0.;
	J[457] = 0.;
	J[458] = 0.;
	J[459] = 0.;
	J[460] = 0.;
	J[461] = 0.;
	J[462] = 0.;
	J[463] = 0.;
	J[464] = 0.;
	J[465] = 0.;
	J[466] = 0.;
	J[467] = 0.;
	J[468] = 0.;
	J[469] = 0.;
	J[470] = 0.;
	J[471] = 0.;
	J[472] = 0.;
	Z[24] = Z[12]*Y[12];
	Z[27] = Z[16]*Y[11];
	Z[28] = Z[27]*Y[34];
	Z[29] = Z[16]*Y[12];
	Z[30] = Z[12]*Y[11];
	Z[31] = Z[30]*Y[34];
	J[473] = Z[34]*Z[16]-Z[36]*Z[12];
	J[474] = -Y[11]*Z[23];
	J[475] = 0.;
	J[476] = 0.;
	J[477] = 0.;
	J[478] = 0.;
	J[479] = 0.;
	J[480] = 0.;
	J[481] = 0.;
	J[482] = 0.;
	J[483] = 0.;
	J[484] = 0.;
	J[485] = 0.;
	J[486] = 0.;
	J[487] = 0.;
	J[488] = 0.;
	Z[24] = 0.08*(Z[12]*Z[2]-Z[0]*Z[16]);
	J[489] = Z[24]*Y[50];
	Z[28] = 0.08*(Z[12]*Z[0]+Z[2]*Z[16]);
	J[490] = Z[28];
	J[491] = 0.;
	J[492] = 0.;
	J[493] = 0.;
	J[494] = 0.;
	J[495] = 0.;
	J[496] = 0.;
	J[497] = 0.;
	J[498] = 0.;
	J[499] = 0.;
	J[500] = 0.;
	J[501] = 0.;
	J[502] = 0.;
	J[503] = 0.;
	J[504] = 0.;
	J[505] = 0.;
	J[506] = 0.;
	J[507] = 0.;
	J[508] = 0.;
	J[509] = 0.;
	J[510] = 0.;
	J[511] = 0.;
	J[512] = 0.;
	J[513] = 0.;
	J[514] = 0.;
	J[515] = 0.;
	J[516] = 0.;
	J[517] = 0.;
	J[518] = 0.;
	J[519] = 0.;
	J[520] = 0.;
	J[521] = 0.;
	J[522] = 0.;
	J[523] = 0.;
	J[524] = 0.;
	J[525] = 0.;
	J[526] = 0.;
	J[527] = 0.;
	Z[27] = Z[35]-Z[27]-0.055;
	Z[29] = Z[33]-Z[30];
	J[528] = -(Z[17]*Y[11]+Z[27]*Z[16]+Z[22]*Y[11]+Z[29]*Z[12]);
	J[529] = 0.;
	J[530] = 0.;
	J[531] = 0.;
	J[532] = 0.;
	J[533] = 0.;
	J[534] = 0.;
	J[535] = 0.;
	J[536] = 0.;
	J[537] = 0.;
	J[538] = 0.;
	J[539] = 0.;
	J[540] = 0.;
	J[541] = 0.;
	J[542] = 0.;
	J[543] = 0.;
	J[544] = Z[28];
	J[545] = 0.;
	J[546] = 0.;
	J[547] = 0.;
	J[548] = 0.;
	J[549] = 0.;
	J[550] = 0.;
	J[551] = 0.;
	J[552] = 0.;
	J[553] = 0.;
	J[554] = 0.;
	J[555] = 0.;
	J[556] = 0.;
	J[557] = 0.;
	J[558] = 0.;
	J[559] = 0.;
	J[560] = 0.;
	J[561] = 0.;
	Z[17] = -Z[23];
	J[562] = Z[17];
	J[563] = 0.;
	J[564] = 0.;
	J[565] = 0.;
	J[566] = 0.;
	J[567] = 0.;
	J[568] = 0.;
	J[569] = 0.;
	J[570] = 0.;
	J[571] = 0.;
	J[572] = 0.;
	J[573] = 0.;
	J[574] = 0.;
	J[575] = 0.;
	J[576] = 0.;
	J[577] = 0.;
	J[578] = 0.;
	J[579] = 0.;
	J[580] = 0.;
	J[581] = 0.;
	J[582] = 0.;
	J[583] = Z[34]*Z[12]+Z[36]*Z[16];
	J[584] = 0.;
	J[585] = 0.;
	J[586] = 0.;
	J[587] = 0.;
	J[588] = 0.;
	J[589] = 0.;
	J[590] = 0.;
	J[591] = 0.;
	J[592] = 0.;
	J[593] = 0.;
	J[594] = 0.;
	J[595] = 0.;
	J[596] = 0.;
	J[597] = 0.;
	J[598] = 0.;
	J[599] = -Z[28]*Y[50];
	J[600] = Z[24];
	J[601] = 0.;
	J[602] = 0.;
	J[603] = 0.;
	J[604] = 0.;
	J[605] = 0.;
	J[606] = 0.;
	J[607] = 0.;
	J[608] = 0.;
	J[609] = 0.;
	J[610] = 0.;
	J[611] = 0.;
	J[612] = 0.;
	J[613] = 0.;
	J[614] = 0.;
	J[615] = 0.;
	J[616] = Z[17];
	J[617] = 0.;
	J[618] = 0.;
	J[619] = 0.;
	J[620] = 0.;
	J[621] = 0.;
	J[622] = 0.;
	J[623] = 0.;
	J[624] = 0.;
	J[625] = 0.;
	J[626] = 0.;
	J[627] = 0.;
	J[628] = 0.;
	J[629] = 0.;
	J[630] = 0.;
	J[631] = 0.;
	J[632] = 0.;
	J[633] = 0.;
	J[634] = 0.;
	J[635] = 0.;
	J[636] = 0.;
	J[637] = 0.;
	J[638] = Z[29]*Z[16]-Z[27]*Z[12];
	J[639] = 0.;
	J[640] = 0.;
	J[641] = 0.;
	J[642] = 0.;
	J[643] = 0.;
	J[644] = 0.;
	J[645] = 0.;
	J[646] = 0.;
	J[647] = 0.;
	J[648] = 0.;
	J[649] = 0.;
	J[650] = 0.;
	J[651] = 0.;
	J[652] = 0.;
	J[653] = 0.;
	J[654] = Z[24];
	J[655] = 0.;
	J[656] = 0.;
	J[657] = 0.;
	J[658] = 0.;
	J[659] = 0.;
	J[660] = 0.;
	J[661] = 0.;
	J[662] = 0.;
	J[663] = 0.;
	J[664] = 0.;
	J[665] = 0.;
	J[666] = 0.;
	J[667] = 0.;
	J[668] = 0.;
	J[669] = 0.;
	J[670] = 0.;
	J[671] = 0.;
	J[672] = 0.;
	Z[12] = Y[50]+Y[36];
	Z[16] = cos(Y[35]);
	Z[17] = sin(Y[35]);
	Z[22] = Z[0]*Z[16]+Z[2]*Z[17];
	Z[23] = -Z[22];
	Z[24] = Z[2]*Z[16]-Z[17]*Z[0];
	Z[27] = Z[23]*Z[22];
	Z[28] = Z[27]-Z[24]*Z[24];
	J[673] = Z[12]*Z[28];
	J[674] = 0.;
	J[675] = 0.;
	J[676] = 0.;
	J[677] = 0.;
	J[678] = 0.;
	J[679] = 0.;
	J[680] = 0.;
	J[681] = 0.;
	J[682] = 0.;
	J[683] = 0.;
	J[684] = 0.;
	J[685] = 0.;
	J[686] = 0.;
	J[687] = 0.;
	J[688] = 0.;
	J[689] = 0.;
	J[690] = 0.;
	J[691] = 0.;
	J[692] = 0.;
	J[693] = 0.;
	J[694] = 0.;
	Z[29] = Z[23]*Y[14];
	Z[30] = Z[24]*Y[13];
	Z[31] = Z[30]*Z[12];
	Z[33] = Z[24]*Y[14];
	Z[34] = 0.03*Z[4];
	Z[35] = Z[34]*Z[6];
	Z[36] = 0.12*Z[0];
	Z[37] = Z[36]*Y[50];
	Z[39] = Z[22]*Y[13];
	Z[40] = Z[39]*Z[12]-Z[33]-Z[37]-Z[35];
	Z[12] = Z[23]*Z[12]*Y[13];
	Z[42] = -(Z[12]+Z[33]);
	Z[43] = 0.03*Z[5];
	Z[44] = Z[43]*Z[6];
	Z[45] = 0.12*Z[2];
	Z[46] = Z[45]*Y[50];
	Z[47] = Z[46]+Z[44]-Z[31]-Z[22]*Y[14];
	Z[48] = Z[31]+Z[47]-Z[29];
	Z[49] = -Z[40]*Z[24];
	J[695] = Z[48]*Z[23]+Z[49]+Z[42]*Z[24];
	J[696] = Y[13]*Z[28];
	J[697] = 0.;
	J[698] = 0.;
	J[699] = 0.;
	J[700] = 0.;
	J[701] = 0.;
	J[702] = 0.;
	J[703] = 0.;
	J[704] = 0.;
	J[705] = 0.;
	J[706] = 0.;
	J[707] = 0.;
	J[708] = 0.;
	Z[28] = 0.03*Z[6];
	Z[50] = Z[28]*Z[25];
	Z[12] = Z[50]-Z[12]-Z[33]-Z[37];
	Z[29] = Z[31]+Z[47]-Z[29]-Z[46]-Z[44];
	J[709] = Z[29]*Z[23]+Z[49]+Z[12]*Z[24];
	Z[31] = Z[39]-Z[34]-Z[36];
	Z[30] = Z[43]+Z[45]-Z[30];
	J[710] = Z[31]*Z[23]+Z[30]*Z[24];
	J[711] = -Z[28]*(Z[23]*Z[5]-Z[24]*Z[25]);
	Z[33] = -Z[34];
	J[712] = Z[33]*Z[23]+Z[43]*Z[24];
	J[713] = 0.;
	J[714] = 0.;
	J[715] = 0.;
	J[716] = 0.;
	J[717] = 0.;
	J[718] = 0.;
	J[719] = 0.;
	J[720] = 0.;
	J[721] = 0.;
	J[722] = 0.;
	J[723] = 0.;
	J[724] = 0.;
	J[725] = 0.;
	J[726] = 0.;
	J[727] = 0.;
	J[728] = 0.;
	J[729] = 0.;
	J[730] = 0.;
	J[731] = 0.;
	J[732] = 0.;
	J[733] = 0.;
	J[734] = 0.;
	J[735] = 0.;
	J[736] = 0.;
	J[737] = 0.;
	J[738] = 0.;
	J[739] = 0.;
	J[740] = 0.;
	J[741] = 0.;
	J[742] = 0.;
	J[743] = 0.;
	J[744] = 0.;
	J[745] = 0.;
	J[746] = 0.;
	J[747] = 0.;
	J[748] = 0.;
	J[749] = 0.;
	Z[39] = 0.03*Z[1];
	Z[47] = Z[39]-Z[16]*Y[13]+0.12;
	Z[49] = 0.03*Z[3];
	Z[51] = Z[49]-Z[17]*Y[13];
	Z[52] = Z[16]*Z[16];
	Z[53] = Z[17]*Z[17];
	J[750] = -(Z[53]*Y[13]+Z[47]*Z[16]+Z[52]*Y[13]+Z[51]*Z[17]);
	J[751] = 0.;
	J[752] = 0.;
	J[753] = 0.;
	J[754] = 0.;
	J[755] = 0.;
	J[756] = 0.;
	J[757] = 0.;
	J[758] = 0.;
	J[759] = 0.;
	J[760] = 0.;
	J[761] = 0.;
	J[762] = 0.;
	J[763] = 0.;
	J[764] = 0.;
	J[765] = 0.;
	J[766] = 0.03*(Z[3]*Z[17]+Z[1]*Z[16]);
	J[767] = 0.;
	J[768] = 0.;
	J[769] = 0.;
	J[770] = 0.;
	J[771] = 0.;
	J[772] = 0.;
	J[773] = 0.;
	J[774] = 0.;
	J[775] = 0.;
	J[776] = 0.;
	J[777] = 0.;
	J[778] = 0.;
	J[779] = 0.;
	J[780] = 0.;
	J[781] = 0.;
	J[782] = 0.;
	J[783] = 0.;
	J[784] = Z[27]-Z[24]*Z[24];
	J[785] = 0.;
	J[786] = 0.;
	J[787] = 0.;
	J[788] = 0.;
	J[789] = 0.;
	J[790] = 0.;
	J[791] = 0.;
	J[792] = 0.;
	J[793] = 0.;
	J[794] = 0.;
	J[795] = 0.;
	J[796] = 0.;
	J[797] = 0.;
	J[798] = 0.;
	J[799] = 0.;
	J[800] = 0.;
	J[801] = 0.;
	J[802] = 0.;
	J[803] = 0.;
	J[804] = 0.;
	Z[23] = Z[40]*Z[23];
	J[805] = Z[48]*Z[24]+Z[23]+Z[42]*Z[22];
	J[806] = 0.;
	J[807] = 0.;
	J[808] = 0.;
	J[809] = 0.;
	J[810] = 0.;
	J[811] = 0.;
	J[812] = 0.;
	J[813] = 0.;
	J[814] = 0.;
	J[815] = 0.;
	J[816] = 0.;
	J[817] = 0.;
	J[818] = 0.;
	J[819] = Z[29]*Z[24]+Z[23]+Z[22]*Z[12];
	J[820] = Z[31]*Z[24]+Z[30]*Z[22];
	J[821] = -Z[28]*(Z[24]*Z[5]-Z[22]*Z[25]);
	J[822] = Z[33]*Z[24]+Z[43]*Z[22];
	J[823] = 0.;
	J[824] = 0.;
	J[825] = 0.;
	J[826] = 0.;
	J[827] = 0.;
	J[828] = 0.;
	J[829] = 0.;
	J[830] = 0.;
	J[831] = 0.;
	J[832] = 0.;
	J[833] = 0.;
	J[834] = 0.;
	J[835] = 0.;
	J[836] = 0.;
	J[837] = 0.;
	J[838] = -(Z[52]+Z[53]);
	J[839] = 0.;
	J[840] = 0.;
	J[841] = 0.;
	J[842] = 0.;
	J[843] = 0.;
	J[844] = 0.;
	J[845] = 0.;
	J[846] = 0.;
	J[847] = 0.;
	J[848] = 0.;
	J[849] = 0.;
	J[850] = 0.;
	J[851] = 0.;
	J[852] = 0.;
	J[853] = 0.;
	J[854] = 0.;
	J[855] = 0.;
	J[856] = 0.;
	J[857] = 0.;
	J[858] = 0.;
	J[859] = 0.;
	J[860] = Z[51]*Z[16]-Z[47]*Z[17];
	J[861] = 0.;
	J[862] = 0.;
	J[863] = 0.;
	J[864] = 0.;
	J[865] = 0.;
	J[866] = 0.;
	J[867] = 0.;
	J[868] = 0.;
	J[869] = 0.;
	J[870] = 0.;
	J[871] = 0.;
	J[872] = 0.;
	J[873] = 0.;
	J[874] = 0.;
	J[875] = 0.;
	J[876] = 0.03*(Z[1]*Z[17]-Z[3]*Z[16]);
	J[877] = 0.;
	J[878] = 0.;
	J[879] = 0.;
	J[880] = 0.;
	J[881] = 0.;
	J[882] = 0.;
	J[883] = 0.;
	J[884] = 0.;
	J[885] = 0.;
	J[886] = 0.;
	J[887] = 0.;
	J[888] = 0.;
	J[889] = 0.;
	J[890] = 0.;
	J[891] = 0.;
	J[892] = 0.;
	J[893] = 0.;
	J[894] = 0.;
	Z[12] = Y[50]+Y[38];
	Z[16] = cos(Y[37]);
	Z[17] = sin(Y[37]);
	Z[22] = Z[0]*Z[16]+Z[2]*Z[17];
	Z[23] = -Z[22];
	Z[24] = Z[2]*Z[16]-Z[17]*Z[0];
	Z[27] = Z[23]*Z[22];
	Z[29] = Z[27]-Z[24]*Z[24];
	J[895] = Z[29]*Z[12];
	J[896] = 0.;
	J[897] = 0.;
	J[898] = 0.;
	J[899] = 0.;
	J[900] = 0.;
	J[901] = 0.;
	J[902] = 0.;
	J[903] = 0.;
	J[904] = 0.;
	J[905] = 0.;
	J[906] = 0.;
	J[907] = 0.;
	J[908] = 0.;
	J[909] = 0.;
	J[910] = 0.;
	J[911] = 0.;
	J[912] = 0.;
	J[913] = 0.;
	J[914] = 0.;
	J[915] = 0.;
	J[916] = 0.;
	Z[30] = Z[23]*Y[16];
	Z[31] = Z[24]*Y[15];
	Z[33] = Z[31]*Z[12];
	Z[40] = Z[24]*Y[16];
	Z[42] = Z[22]*Y[15];
	Z[35] = Z[42]*Z[12]+Z[35]-Z[40]-Z[37];
	Z[12] = Z[23]*Z[12]*Y[15];
	Z[47] = -(Z[12]+Z[40]);
	Z[48] = Z[46]-Z[33]-Z[22]*Y[16]-Z[44];
	Z[51] = Z[33]+Z[48]-Z[30];
	Z[52] = -Z[35]*Z[24];
	J[917] = Z[51]*Z[23]+Z[52]+Z[47]*Z[24];
	J[918] = Y[15]*Z[29];
	J[919] = 0.;
	J[920] = 0.;
	J[921] = 0.;
	J[922] = 0.;
	J[923] = 0.;
	J[924] = 0.;
	J[925] = 0.;
	J[926] = 0.;
	J[927] = 0.;
	J[928] = 0.;
	Z[12] = -(Z[12]+Z[40]+Z[37]+Z[50]);
	Z[29] = Z[33]+Z[44]+Z[48]-Z[30]-Z[46];
	J[929] = Z[29]*Z[23]+Z[52]+Z[12]*Z[24];
	Z[30] = Z[34]+Z[42]-Z[36];
	Z[31] = Z[45]-Z[43]-Z[31];
	J[930] = Z[30]*Z[23]+Z[31]*Z[24];
	J[931] = Z[28]*(Z[23]*Z[5]-Z[24]*Z[25]);
	Z[33] = -Z[43];
	J[932] = Z[34]*Z[23]+Z[33]*Z[24];
	J[933] = 0.;
	J[934] = 0.;
	J[935] = 0.;
	J[936] = 0.;
	J[937] = 0.;
	J[938] = 0.;
	J[939] = 0.;
	J[940] = 0.;
	J[941] = 0.;
	J[942] = 0.;
	J[943] = 0.;
	J[944] = 0.;
	J[945] = 0.;
	J[946] = 0.;
	J[947] = 0.;
	J[948] = 0.;
	J[949] = 0.;
	J[950] = 0.;
	J[951] = 0.;
	J[952] = 0.;
	J[953] = 0.;
	J[954] = 0.;
	J[955] = 0.;
	J[956] = 0.;
	J[957] = 0.;
	J[958] = 0.;
	J[959] = 0.;
	J[960] = 0.;
	J[961] = 0.;
	J[962] = 0.;
	J[963] = 0.;
	J[964] = 0.;
	J[965] = 0.;
	J[966] = 0.;
	J[967] = 0.;
	J[968] = 0.;
	J[969] = 0.;
	J[970] = 0.;
	J[971] = 0.;
	Z[36] = -(Z[16]*Y[15]+Z[39])+0.12;
	Z[37] = -(Z[17]*Y[15]+Z[49]);
	Z[39] = Z[16]*Z[16];
	Z[40] = Z[17]*Z[17];
	J[972] = -(Z[40]*Y[15]+Z[36]*Z[16]+Z[39]*Y[15]+Z[37]*Z[17]);
	J[973] = 0.;
	J[974] = 0.;
	J[975] = 0.;
	J[976] = 0.;
	J[977] = 0.;
	J[978] = 0.;
	J[979] = 0.;
	J[980] = 0.;
	J[981] = 0.;
	J[982] = 0.;
	J[983] = 0.;
	J[984] = 0.;
	J[985] = 0.;
	J[986] = -0.03*(Z[3]*Z[17]+Z[1]*Z[16]);
	J[987] = 0.;
	J[988] = 0.;
	J[989] = 0.;
	J[990] = 0.;
	J[991] = 0.;
	J[992] = 0.;
	J[993] = 0.;
	J[994] = 0.;
	J[995] = 0.;
	J[996] = 0.;
	J[997] = 0.;
	J[998] = 0.;
	J[999] = 0.;
	J[1000] = 0.;
	J[1001] = 0.;
	J[1002] = 0.;
	J[1003] = 0.;
	J[1004] = 0.;
	J[1005] = 0.;
	J[1006] = Z[27]-Z[24]*Z[24];
	J[1007] = 0.;
	J[1008] = 0.;
	J[1009] = 0.;
	J[1010] = 0.;
	J[1011] = 0.;
	J[1012] = 0.;
	J[1013] = 0.;
	J[1014] = 0.;
	J[1015] = 0.;
	J[1016] = 0.;
	J[1017] = 0.;
	J[1018] = 0.;
	J[1019] = 0.;
	J[1020] = 0.;
	J[1021] = 0.;
	J[1022] = 0.;
	J[1023] = 0.;
	J[1024] = 0.;
	J[1025] = 0.;
	J[1026] = 0.;
	Z[23] = Z[35]*Z[23];
	J[1027] = Z[51]*Z[24]+Z[23]+Z[47]*Z[22];
	J[1028] = 0.;
	J[1029] = 0.;
	J[1030] = 0.;
	J[1031] = 0.;
	J[1032] = 0.;
	J[1033] = 0.;
	J[1034] = 0.;
	J[1035] = 0.;
	J[1036] = 0.;
	J[1037] = 0.;
	J[1038] = 0.;
	J[1039] = Z[29]*Z[24]+Z[23]+Z[22]*Z[12];
	J[1040] = Z[30]*Z[24]+Z[31]*Z[22];
	J[1041] = Z[28]*(Z[24]*Z[5]-Z[22]*Z[25]);
	J[1042] = Z[24]*Z[34]+Z[22]*Z[33];
	J[1043] = 0.;
	J[1044] = 0.;
	J[1045] = 0.;
	J[1046] = 0.;
	J[1047] = 0.;
	J[1048] = 0.;
	J[1049] = 0.;
	J[1050] = 0.;
	J[1051] = 0.;
	J[1052] = 0.;
	J[1053] = 0.;
	J[1054] = 0.;
	J[1055] = 0.;
	J[1056] = 0.;
	J[1057] = 0.;
	J[1058] = 0.;
	J[1059] = 0.;
	J[1060] = -(Z[40]+Z[39]);
	J[1061] = 0.;
	J[1062] = 0.;
	J[1063] = 0.;
	J[1064] = 0.;
	J[1065] = 0.;
	J[1066] = 0.;
	J[1067] = 0.;
	J[1068] = 0.;
	J[1069] = 0.;
	J[1070] = 0.;
	J[1071] = 0.;
	J[1072] = 0.;
	J[1073] = 0.;
	J[1074] = 0.;
	J[1075] = 0.;
	J[1076] = 0.;
	J[1077] = 0.;
	J[1078] = 0.;
	J[1079] = 0.;
	J[1080] = 0.;
	J[1081] = 0.;
	J[1082] = Z[37]*Z[16]-Z[36]*Z[17];
	J[1083] = 0.;
	J[1084] = 0.;
	J[1085] = 0.;
	J[1086] = 0.;
	J[1087] = 0.;
	J[1088] = 0.;
	J[1089] = 0.;
	J[1090] = 0.;
	J[1091] = 0.;
	J[1092] = 0.;
	J[1093] = 0.;
	J[1094] = 0.;
	J[1095] = 0.;
	J[1096] = 0.03*(Z[3]*Z[16]-Z[1]*Z[17]);
	J[1097] = 0.;
	J[1098] = 0.;
	J[1099] = 0.;
	J[1100] = 0.;
	J[1101] = 0.;
	J[1102] = 0.;
	J[1103] = 0.;
	J[1104] = 0.;
	J[1105] = 0.;
	J[1106] = 0.;
	J[1107] = 0.;
	J[1108] = 0.;
	J[1109] = 0.;
	J[1110] = 0.;
	J[1111] = 0.;
	J[1112] = 0.;
	J[1113] = 0.;
	J[1114] = 0.;
	J[1115] = 0.;
	J[1116] = 0.;
	Z[12] = sin(Y[39]);
	Z[16] = cos(Y[39]);
	Z[17] = Z[16]*Z[16];
	Z[22] = Z[12]*Z[12];
	Z[23] = Z[22]+Z[17];
	J[1117] = -Y[40]*Z[23];
	J[1118] = 0.;
	J[1119] = 0.;
	J[1120] = 0.;
	J[1121] = 0.;
	J[1122] = 0.;
	J[1123] = 0.;
	J[1124] = 0.;
	J[1125] = 0.;
	J[1126] = 0.;
	J[1127] = 0.;
	J[1128] = 0.;
	J[1129] = 0.;
	J[1130] = 0.;
	J[1131] = 0.;
	J[1132] = 0.;
	J[1133] = 0.;
	J[1134] = 0.;
	J[1135] = 0.;
	J[1136] = 0.;
	J[1137] = 0.;
	J[1138] = 0.;
	Z[24] = Z[12]*Y[18];
	Z[27] = Z[16]*Y[17];
	Z[28] = Z[27]*Y[40];
	Z[29] = 0.045*Z[4];
	Z[30] = Z[29]*Z[6];
	Z[31] = Z[16]*Y[18];
	Z[33] = Z[12]*Y[17];
	Z[34] = Z[33]*Y[40];
	Z[35] = 0.045*Z[5];
	Z[36] = Z[35]*Z[6];
	Z[24] = -(Z[15]+Z[36]);
	Z[28] = Z[21]+Z[30];
	J[1139] = Z[12]*Z[24]+Z[28]*Z[16];
	J[1140] = -Y[17]*Z[23];
	J[1141] = 0.;
	J[1142] = 0.;
	J[1143] = 0.;
	J[1144] = 0.;
	J[1145] = 0.;
	J[1146] = 0.;
	J[1147] = 0.;
	J[1148] = 0.;
	Z[31] = -(Z[15]+Z[36]);
	Z[34] = 0.045*Z[6];
	Z[37] = Z[34]*Z[25];
	Z[39] = Z[37]-Z[21];
	J[1149] = Z[39]*Z[16]-Z[31]*Z[12];
	Z[40] = -(Z[29]+Z[20]);
	Z[42] = Z[35]+Z[14];
	Z[43] = Z[42]*Z[16]-Z[40]*Z[12];
	J[1150] = Z[43];
	J[1151] = Z[34]*(Z[12]*Z[5]+Z[25]*Z[16]);
	Z[44] = Z[29]*Z[12]+Z[35]*Z[16];
	J[1152] = Z[44];
	J[1153] = 0.;
	J[1154] = 0.;
	J[1155] = 0.;
	J[1156] = 0.;
	J[1157] = 0.;
	J[1158] = 0.;
	J[1159] = 0.;
	J[1160] = 0.;
	J[1161] = 0.;
	J[1162] = 0.;
	J[1163] = 0.;
	J[1164] = 0.;
	J[1165] = 0.;
	J[1166] = 0.;
	J[1167] = 0.;
	J[1168] = 0.;
	J[1169] = 0.;
	J[1170] = 0.;
	J[1171] = 0.;
	J[1172] = 0.;
	J[1173] = 0.;
	J[1174] = 0.;
	J[1175] = 0.;
	J[1176] = 0.;
	J[1177] = 0.;
	J[1178] = 0.;
	J[1179] = 0.;
	J[1180] = 0.;
	J[1181] = 0.;
	J[1182] = 0.;
	J[1183] = 0.;
	J[1184] = 0.;
	J[1185] = 0.;
	J[1186] = 0.;
	J[1187] = 0.;
	J[1188] = 0.;
	J[1189] = 0.;
	J[1190] = 0.;
	J[1191] = 0.;
	J[1192] = 0.;
	J[1193] = 0.;
	Z[27] = Z[35]+Z[14]-Z[27]+0.04;
	Z[33] = Z[29]+Z[20]-Z[33];
	J[1194] = -(Z[22]*Y[17]+Z[27]*Z[16]+Z[17]*Y[17]+Z[33]*Z[12]);
	J[1195] = 0.;
	J[1196] = 0.;
	J[1197] = 0.;
	J[1198] = 0.;
	J[1199] = 0.;
	J[1200] = 0.;
	J[1201] = 0.;
	J[1202] = 0.;
	J[1203] = 0.;
	J[1204] = Z[43];
	J[1205] = 0.;
	J[1206] = Z[44];
	J[1207] = 0.;
	J[1208] = 0.;
	J[1209] = 0.;
	J[1210] = 0.;
	J[1211] = 0.;
	J[1212] = 0.;
	J[1213] = 0.;
	J[1214] = 0.;
	J[1215] = 0.;
	J[1216] = 0.;
	J[1217] = 0.;
	J[1218] = 0.;
	J[1219] = 0.;
	J[1220] = 0.;
	J[1221] = 0.;
	J[1222] = 0.;
	J[1223] = 0.;
	J[1224] = 0.;
	J[1225] = 0.;
	J[1226] = 0.;
	J[1227] = 0.;
	Z[17] = -Z[23];
	J[1228] = Z[17];
	J[1229] = 0.;
	J[1230] = 0.;
	J[1231] = 0.;
	J[1232] = 0.;
	J[1233] = 0.;
	J[1234] = 0.;
	J[1235] = 0.;
	J[1236] = 0.;
	J[1237] = 0.;
	J[1238] = 0.;
	J[1239] = 0.;
	J[1240] = 0.;
	J[1241] = 0.;
	J[1242] = 0.;
	J[1243] = 0.;
	J[1244] = 0.;
	J[1245] = 0.;
	J[1246] = 0.;
	J[1247] = 0.;
	J[1248] = 0.;
	J[1249] = Z[12]*Z[28]-Z[24]*Z[16];
	J[1250] = 0.;
	J[1251] = 0.;
	J[1252] = 0.;
	J[1253] = 0.;
	J[1254] = 0.;
	J[1255] = 0.;
	J[1256] = 0.;
	J[1257] = 0.;
	J[1258] = 0.;
	J[1259] = Z[31]*Z[16]+Z[39]*Z[12];
	Z[22] = Z[40]*Z[16]+Z[42]*Z[12];
	J[1260] = Z[22];
	J[1261] = -Z[34]*(Z[16]*Z[5]-Z[25]*Z[12]);
	Z[23] = Z[35]*Z[12]-Z[29]*Z[16];
	J[1262] = Z[23];
	J[1263] = 0.;
	J[1264] = 0.;
	J[1265] = 0.;
	J[1266] = 0.;
	J[1267] = 0.;
	J[1268] = 0.;
	J[1269] = 0.;
	J[1270] = 0.;
	J[1271] = 0.;
	J[1272] = 0.;
	J[1273] = 0.;
	J[1274] = 0.;
	J[1275] = 0.;
	J[1276] = 0.;
	J[1277] = 0.;
	J[1278] = 0.;
	J[1279] = 0.;
	J[1280] = 0.;
	J[1281] = 0.;
	J[1282] = Z[17];
	J[1283] = 0.;
	J[1284] = 0.;
	J[1285] = 0.;
	J[1286] = 0.;
	J[1287] = 0.;
	J[1288] = 0.;
	J[1289] = 0.;
	J[1290] = 0.;
	J[1291] = 0.;
	J[1292] = 0.;
	J[1293] = 0.;
	J[1294] = 0.;
	J[1295] = 0.;
	J[1296] = 0.;
	J[1297] = 0.;
	J[1298] = 0.;
	J[1299] = 0.;
	J[1300] = 0.;
	J[1301] = 0.;
	J[1302] = 0.;
	J[1303] = 0.;
	J[1304] = Z[33]*Z[16]-Z[27]*Z[12];
	J[1305] = 0.;
	J[1306] = 0.;
	J[1307] = 0.;
	J[1308] = 0.;
	J[1309] = 0.;
	J[1310] = 0.;
	J[1311] = 0.;
	J[1312] = 0.;
	J[1313] = 0.;
	J[1314] = Z[22];
	J[1315] = 0.;
	J[1316] = Z[23];
	J[1317] = 0.;
	J[1318] = 0.;
	J[1319] = 0.;
	J[1320] = 0.;
	J[1321] = 0.;
	J[1322] = 0.;
	J[1323] = 0.;
	J[1324] = 0.;
	J[1325] = 0.;
	J[1326] = 0.;
	J[1327] = 0.;
	J[1328] = 0.;
	J[1329] = 0.;
	J[1330] = 0.;
	J[1331] = 0.;
	J[1332] = 0.;
	J[1333] = 0.;
	J[1334] = 0.;
	J[1335] = 0.;
	J[1336] = 0.;
	J[1337] = 0.;
	J[1338] = 0.;
	Z[12] = sin(Y[41]);
	Z[16] = cos(Y[41]);
	Z[17] = Z[12]*Z[12];
	Z[22] = Z[16]*Z[16];
	Z[23] = Z[22]+Z[17];
	J[1339] = -Z[23]*Y[42];
	J[1340] = 0.;
	J[1341] = 0.;
	J[1342] = 0.;
	J[1343] = 0.;
	J[1344] = 0.;
	J[1345] = 0.;
	J[1346] = 0.;
	J[1347] = 0.;
	J[1348] = 0.;
	J[1349] = 0.;
	J[1350] = 0.;
	J[1351] = 0.;
	J[1352] = 0.;
	J[1353] = 0.;
	J[1354] = 0.;
	J[1355] = 0.;
	J[1356] = 0.;
	J[1357] = 0.;
	J[1358] = 0.;
	J[1359] = 0.;
	J[1360] = 0.;
	Z[24] = Z[12]*Y[20];
	Z[27] = Z[16]*Y[19];
	Z[28] = Z[27]*Y[42];
	Z[31] = Z[16]*Y[20];
	Z[33] = Z[12]*Y[19];
	Z[39] = Z[33]*Y[42];
	Z[24] = Z[36]-Z[15];
	Z[28] = Z[21]-Z[30];
	J[1361] = Z[12]*Z[24]+Z[28]*Z[16];
	J[1362] = -Y[19]*Z[23];
	J[1363] = 0.;
	J[1364] = 0.;
	J[1365] = 0.;
	J[1366] = 0.;
	J[1367] = 0.;
	J[1368] = 0.;
	Z[30] = Z[36]-Z[15];
	Z[31] = -(Z[21]+Z[37]);
	J[1369] = Z[31]*Z[16]-Z[30]*Z[12];
	Z[36] = Z[29]-Z[20];
	Z[37] = Z[14]-Z[35];
	Z[39] = Z[37]*Z[16]-Z[36]*Z[12];
	J[1370] = Z[39];
	J[1371] = -Z[34]*(Z[12]*Z[5]+Z[25]*Z[16]);
	Z[40] = -Z[35];
	Z[42] = Z[40]*Z[16]-Z[29]*Z[12];
	J[1372] = Z[42];
	J[1373] = 0.;
	J[1374] = 0.;
	J[1375] = 0.;
	J[1376] = 0.;
	J[1377] = 0.;
	J[1378] = 0.;
	J[1379] = 0.;
	J[1380] = 0.;
	J[1381] = 0.;
	J[1382] = 0.;
	J[1383] = 0.;
	J[1384] = 0.;
	J[1385] = 0.;
	J[1386] = 0.;
	J[1387] = 0.;
	J[1388] = 0.;
	J[1389] = 0.;
	J[1390] = 0.;
	J[1391] = 0.;
	J[1392] = 0.;
	J[1393] = 0.;
	J[1394] = 0.;
	J[1395] = 0.;
	J[1396] = 0.;
	J[1397] = 0.;
	J[1398] = 0.;
	J[1399] = 0.;
	J[1400] = 0.;
	J[1401] = 0.;
	J[1402] = 0.;
	J[1403] = 0.;
	J[1404] = 0.;
	J[1405] = 0.;
	J[1406] = 0.;
	J[1407] = 0.;
	J[1408] = 0.;
	J[1409] = 0.;
	J[1410] = 0.;
	J[1411] = 0.;
	J[1412] = 0.;
	J[1413] = 0.;
	J[1414] = 0.;
	J[1415] = 0.;
	Z[14] = Z[14]-Z[35]-Z[27]-0.04;
	Z[20] = Z[20]-Z[29]-Z[33];
	J[1416] = -(Z[17]*Y[19]+Z[14]*Z[16]+Z[22]*Y[19]+Z[12]*Z[20]);
	J[1417] = 0.;
	J[1418] = 0.;
	J[1419] = 0.;
	J[1420] = 0.;
	J[1421] = 0.;
	J[1422] = 0.;
	J[1423] = 0.;
	J[1424] = Z[39];
	J[1425] = 0.;
	J[1426] = Z[42];
	J[1427] = 0.;
	J[1428] = 0.;
	J[1429] = 0.;
	J[1430] = 0.;
	J[1431] = 0.;
	J[1432] = 0.;
	J[1433] = 0.;
	J[1434] = 0.;
	J[1435] = 0.;
	J[1436] = 0.;
	J[1437] = 0.;
	J[1438] = 0.;
	J[1439] = 0.;
	J[1440] = 0.;
	J[1441] = 0.;
	J[1442] = 0.;
	J[1443] = 0.;
	J[1444] = 0.;
	J[1445] = 0.;
	J[1446] = 0.;
	J[1447] = 0.;
	J[1448] = 0.;
	J[1449] = 0.;
	Z[17] = -Z[23];
	J[1450] = Z[17];
	J[1451] = 0.;
	J[1452] = 0.;
	J[1453] = 0.;
	J[1454] = 0.;
	J[1455] = 0.;
	J[1456] = 0.;
	J[1457] = 0.;
	J[1458] = 0.;
	J[1459] = 0.;
	J[1460] = 0.;
	J[1461] = 0.;
	J[1462] = 0.;
	J[1463] = 0.;
	J[1464] = 0.;
	J[1465] = 0.;
	J[1466] = 0.;
	J[1467] = 0.;
	J[1468] = 0.;
	J[1469] = 0.;
	J[1470] = 0.;
	J[1471] = Z[12]*Z[28]-Z[24]*Z[16];
	J[1472] = 0.;
	J[1473] = 0.;
	J[1474] = 0.;
	J[1475] = 0.;
	J[1476] = 0.;
	J[1477] = 0.;
	J[1478] = 0.;
	J[1479] = Z[30]*Z[16]+Z[31]*Z[12];
	Z[22] = Z[36]*Z[16]+Z[37]*Z[12];
	J[1480] = Z[22];
	J[1481] = Z[34]*(Z[16]*Z[5]-Z[25]*Z[12]);
	Z[23] = Z[29]*Z[16]+Z[40]*Z[12];
	J[1482] = Z[23];
	J[1483] = 0.;
	J[1484] = 0.;
	J[1485] = 0.;
	J[1486] = 0.;
	J[1487] = 0.;
	J[1488] = 0.;
	J[1489] = 0.;
	J[1490] = 0.;
	J[1491] = 0.;
	J[1492] = 0.;
	J[1493] = 0.;
	J[1494] = 0.;
	J[1495] = 0.;
	J[1496] = 0.;
	J[1497] = 0.;
	J[1498] = 0.;
	J[1499] = 0.;
	J[1500] = 0.;
	J[1501] = 0.;
	J[1502] = 0.;
	J[1503] = 0.;
	J[1504] = Z[17];
	J[1505] = 0.;
	J[1506] = 0.;
	J[1507] = 0.;
	J[1508] = 0.;
	J[1509] = 0.;
	J[1510] = 0.;
	J[1511] = 0.;
	J[1512] = 0.;
	J[1513] = 0.;
	J[1514] = 0.;
	J[1515] = 0.;
	J[1516] = 0.;
	J[1517] = 0.;
	J[1518] = 0.;
	J[1519] = 0.;
	J[1520] = 0.;
	J[1521] = 0.;
	J[1522] = 0.;
	J[1523] = 0.;
	J[1524] = 0.;
	J[1525] = 0.;
	J[1526] = Z[20]*Z[16]-Z[12]*Z[14];
	J[1527] = 0.;
	J[1528] = 0.;
	J[1529] = 0.;
	J[1530] = 0.;
	J[1531] = 0.;
	J[1532] = 0.;
	J[1533] = 0.;
	J[1534] = Z[22];
	J[1535] = 0.;
	J[1536] = Z[23];
	J[1537] = 0.;
	J[1538] = 0.;
	J[1539] = 0.;
	J[1540] = 0.;
	J[1541] = 0.;
	J[1542] = 0.;
	J[1543] = 0.;
	J[1544] = 0.;
	J[1545] = 0.;
	J[1546] = 0.;
	J[1547] = 0.;
	J[1548] = 0.;
	J[1549] = 0.;
	J[1550] = 0.;
	J[1551] = 0.;
	J[1552] = 0.;
	J[1553] = 0.;
	J[1554] = 0.;
	J[1555] = 0.;
	J[1556] = 0.;
	J[1557] = 0.;
	J[1558] = 0.;
	J[1559] = 0.;
	J[1560] = 0.;
	Z[12] = Y[50]+Y[44]+Y[52];
	Z[14] = cos(Y[43]);
	Z[16] = sin(Y[43]);
	Z[17] = Z[1]*Z[14]-Z[3]*Z[16];
	Z[14] = Z[3]*Z[14]+Z[1]*Z[16];
	Z[16] = Z[17]*Z[0];
	Z[20] = Z[16]+Z[2]*Z[14];
	Z[17] = Z[2]*Z[17];
	Z[22] = Z[17]-Z[0]*Z[14];
	Z[23] = Z[20]*Z[25]-Z[22]*Z[5];
	J[1561] = Z[23]*Z[12];
	Z[24] = -Z[22];
	Z[27] = -Z[20];
	Z[28] = Z[24]*Z[25]+Z[27]*Z[5];
	J[1562] = Z[28];
	J[1563] = 0.;
	J[1564] = 0.;
	J[1565] = 0.;
	J[1566] = 0.;
	J[1567] = 0.;
	J[1568] = Z[5];
	J[1569] = 0.;
	J[1570] = Z[25];
	J[1571] = 0.;
	J[1572] = 0.;
	J[1573] = 0.;
	J[1574] = 0.;
	J[1575] = 0.;
	J[1576] = 0.;
	J[1577] = 0.;
	J[1578] = 0.;
	J[1579] = 0.;
	J[1580] = 0.;
	J[1581] = 0.;
	J[1582] = 0.;
	Z[14] = -Z[14];
	Z[17] = Z[0]*Z[14]+Z[17];
	Z[14] = Z[2]*Z[14]-Z[16];
	Z[16] = Z[14]*Y[22];
	Z[29] = Z[17]*Y[21];
	Z[30] = Z[29]*Z[12];
	Z[31] = Z[30]-Z[16];
	Z[33] = Z[14]*Y[21];
	Z[34] = Z[33]*Z[12];
	Z[35] = Z[17]*Y[22];
	Z[36] = -(Z[34]+Z[35]);
	J[1583] = Z[31]*Z[25]+Z[36]*Z[5];
	J[1584] = Y[21]*Z[23];
	J[1585] = 0.;
	J[1586] = 0.;
	J[1587] = 0.;
	J[1588] = 0.;
	Z[23] = 0.065*Z[11];
	Z[37] = Z[23]*Z[7];
	Z[39] = 0.005*Z[5];
	Z[40] = Z[39]*Z[6];
	Z[42] = Z[22]*Y[21];
	Z[43] = Z[42]*Z[12];
	Z[44] = Z[22]*Y[22];
	Z[45] = Z[20]*Y[21];
	Z[46] = 0.005*Z[4];
	Z[47] = 0.065*Z[19];
	Z[48] = Z[21]+Z[46]*Z[6]+Z[47]*Z[7]+Z[45]*Z[12]+Y[30]-Z[44];
	Z[49] = 0.005*Z[6]*Z[25];
	Z[50] = Z[27]*Y[21];
	Z[51] = 0.065*Z[7];
	Z[44] = Z[21]-Z[49]-Z[51]*Z[26]-Z[50]*Z[12]-Z[44];
	Z[52] = Y[28]-Z[15]-Z[40]-Z[37]-Z[43]-Z[20]*Y[22];
	Z[37] = Z[15]+Z[40]+Z[37]+Z[43]+Z[52]-Z[27]*Y[22];
	Z[43] = Z[48]*Z[41];
	J[1589] = Z[37]*Z[25]+Z[43]+Z[44]*Z[5];
	Z[53] = 0.005*Z[1];
	Z[54] = 0.065*Z[10];
	Z[55] = Z[54]+Z[53]+0.31;
	Z[56] = 0.005*Z[3]+0.065*Z[8];
	Z[57] = Z[56]*Z[2];
	Z[58] = Z[55]*Z[0]+Z[57]+Z[45];
	Z[56] = Z[56]*Z[0];
	Z[55] = Z[56]-Z[55]*Z[2]-Z[42];
	J[1590] = Z[58]*Z[25]+Z[55]*Z[5];
	Z[34] = -(Z[49]+Z[51]*Z[18]+Z[34]+Z[35]);
	Z[16] = Z[40]+Z[51]*Z[9]+Z[30]+Z[52]-Z[16];
	J[1591] = Z[25]*Z[16]+Z[43]+Z[34]*Z[5];
	Z[30] = Z[46]+Z[45]+Z[47];
	Z[35] = Z[56]-(Z[54]+Z[53])*Z[2]-Z[42];
	J[1592] = Z[30]*Z[25]+Z[35]*Z[5];
	J[1593] = 0.65*Z[13];
	Z[23] = -Z[23];
	J[1594] = Z[25]*Z[47]+Z[23]*Z[5];
	J[1595] = 0.;
	J[1596] = 0.;
	J[1597] = 0.;
	J[1598] = 0.;
	J[1599] = 0.;
	J[1600] = 0.;
	J[1601] = 0.;
	J[1602] = 0.;
	J[1603] = 0.;
	J[1604] = 0.;
	J[1605] = 0.;
	J[1606] = 0.;
	J[1607] = 0.;
	J[1608] = 0.;
	J[1609] = 0.;
	J[1610] = 0.;
	J[1611] = 0.;
	J[1612] = 0.;
	J[1613] = 0.;
	J[1614] = 0.;
	J[1615] = 0.;
	J[1616] = Z[28];
	J[1617] = 0.;
	J[1618] = 0.;
	J[1619] = 0.;
	J[1620] = 0.;
	J[1621] = 0.;
	J[1622] = Z[5];
	J[1623] = 0.;
	J[1624] = Z[25];
	J[1625] = 0.;
	J[1626] = 0.;
	J[1627] = 0.;
	J[1628] = 0.;
	J[1629] = 0.;
	J[1630] = 0.;
	J[1631] = 0.;
	J[1632] = 0.;
	J[1633] = 0.;
	J[1634] = 0.;
	J[1635] = 0.;
	J[1636] = 0.;
	J[1637] = 0.;
	J[1638] = -Y[21]*(Z[25]*Z[14]+Z[17]*Z[5]);
	J[1639] = 0.;
	J[1640] = 0.;
	J[1641] = 0.;
	J[1642] = 0.;
	J[1643] = 0.;
	Z[28] = Z[54]-Z[38]-0.085*Z[1]+0.155;
	Z[40] = Z[28]*Z[0];
	Z[28] = Z[28]*Z[2];
	Z[43] = Z[56]+Y[29]-Z[28]-Z[42];
	Z[28] = Z[56]-Z[28]-Z[42];
	Z[42] = Y[27]-Z[40]-Z[57]-Z[45];
	Z[40] = Z[40]+Z[57]+Z[42]-Z[50];
	Z[45] = Z[43]*Z[41];
	J[1644] = Z[40]*Z[25]+Z[45]+Z[28]*Z[5];
	J[1645] = 0.;
	Z[49] = 0.065*Z[18];
	Z[50] = 0.065*Z[9];
	Z[29] = -(Z[50]+Z[39]+Z[29]);
	Z[33] = Z[46]+Z[42]-Z[49]-Z[33];
	J[1646] = Z[33]*Z[25]+Z[45]+Z[29]*Z[5];
	J[1647] = 0.;
	Z[39] = -Z[49];
	Z[42] = -Z[50];
	J[1648] = Z[39]*Z[25]+Z[42]*Z[5];
	J[1649] = 0.;
	J[1650] = 0.;
	J[1651] = 0.;
	J[1652] = 0.;
	J[1653] = 0.;
	J[1654] = 0.;
	J[1655] = 0.;
	J[1656] = 0.;
	J[1657] = 0.;
	J[1658] = 0.;
	J[1659] = 0.;
	J[1660] = 0.;
	J[1661] = 0.;
	J[1662] = 0.;
	J[1663] = 0.;
	J[1664] = 0.;
	J[1665] = 0.;
	J[1666] = 0.;
	J[1667] = 0.;
	J[1668] = 0.;
	J[1669] = 0.;
	J[1670] = 0.;
	Z[20] = Z[20]*Z[5]-Z[22]*Z[4];
	J[1671] = Z[12]*Z[20];
	Z[12] = Z[24]*Z[5]+Z[27]*Z[4];
	J[1672] = Z[12];
	J[1673] = 0.;
	J[1674] = 0.;
	J[1675] = 0.;
	J[1676] = 0.;
	J[1677] = 0.;
	J[1678] = Z[4];
	J[1679] = 0.;
	J[1680] = Z[5];
	J[1681] = 0.;
	J[1682] = 0.;
	J[1683] = 0.;
	J[1684] = 0.;
	J[1685] = 0.;
	J[1686] = 0.;
	J[1687] = 0.;
	J[1688] = 0.;
	J[1689] = 0.;
	J[1690] = 0.;
	J[1691] = 0.;
	J[1692] = 0.;
	J[1693] = Z[31]*Z[5]+Z[36]*Z[4];
	J[1694] = Z[20]*Y[21];
	J[1695] = 0.;
	J[1696] = 0.;
	J[1697] = 0.;
	J[1698] = 0.;
	Z[20] = Z[48]*Z[25];
	J[1699] = Z[37]*Z[5]+Z[20]+Z[44]*Z[4];
	J[1700] = Z[58]*Z[5]+Z[55]*Z[4];
	J[1701] = Z[16]*Z[5]+Z[20]+Z[34]*Z[4];
	J[1702] = Z[30]*Z[5]+Z[35]*Z[4];
	J[1703] = 0.65*Z[32];
	J[1704] = Z[47]*Z[5]+Z[23]*Z[4];
	J[1705] = 0.;
	J[1706] = 0.;
	J[1707] = 0.;
	J[1708] = 0.;
	J[1709] = 0.;
	J[1710] = 0.;
	J[1711] = 0.;
	J[1712] = 0.;
	J[1713] = 0.;
	J[1714] = 0.;
	J[1715] = 0.;
	J[1716] = 0.;
	J[1717] = 0.;
	J[1718] = 0.;
	J[1719] = 0.;
	J[1720] = 0.;
	J[1721] = 0.;
	J[1722] = 0.;
	J[1723] = 0.;
	J[1724] = 0.;
	J[1725] = 0.;
	J[1726] = Z[12];
	J[1727] = 0.;
	J[1728] = 0.;
	J[1729] = 0.;
	J[1730] = 0.;
	J[1731] = 0.;
	J[1732] = Z[4];
	J[1733] = 0.;
	J[1734] = Z[5];
	J[1735] = 0.;
	J[1736] = 0.;
	J[1737] = 0.;
	J[1738] = 0.;
	J[1739] = 0.;
	J[1740] = 0.;
	J[1741] = 0.;
	J[1742] = 0.;
	J[1743] = 0.;
	J[1744] = 0.;
	J[1745] = 0.;
	J[1746] = 0.;
	J[1747] = 0.;
	J[1748] = -Y[21]*(Z[14]*Z[5]+Z[17]*Z[4]);
	J[1749] = 0.;
	J[1750] = 0.;
	J[1751] = 0.;
	J[1752] = 0.;
	J[1753] = 0.;
	Z[12] = Z[43]*Z[25];
	J[1754] = Z[40]*Z[5]+Z[12]+Z[28]*Z[4];
	J[1755] = 0.;
	J[1756] = Z[33]*Z[5]+Z[12]+Z[29]*Z[4];
	J[1757] = 0.;
	J[1758] = Z[39]*Z[5]+Z[42]*Z[4];
	J[1759] = 0.;
	J[1760] = 0.;
	J[1761] = 0.;
	J[1762] = 0.;
	J[1763] = 0.;
	J[1764] = 0.;
	J[1765] = 0.;
	J[1766] = 0.;
	J[1767] = 0.;
	J[1768] = 0.;
	J[1769] = 0.;
	J[1770] = 0.;
	J[1771] = 0.;
	J[1772] = 0.;
	J[1773] = 0.;
	J[1774] = 0.;
	J[1775] = 0.;
	J[1776] = 0.;
	J[1777] = 0.;
	J[1778] = 0.;
	J[1779] = 0.;
	J[1780] = 0.;
	J[1781] = 0.;
	J[1782] = 0.;
	Z[12] = Y[50]+Y[46]+Y[52];
	Z[14] = cos(Y[45]);
	Z[16] = sin(Y[45]);
	Z[17] = Z[1]*Z[14]-Z[3]*Z[16];
	Z[14] = Z[3]*Z[14]+Z[1]*Z[16];
	Z[16] = Z[17]*Z[0];
	Z[20] = Z[16]+Z[2]*Z[14];
	Z[17] = Z[2]*Z[17];
	Z[22] = Z[17]-Z[0]*Z[14];
	Z[23] = Z[20]*Z[25]-Z[22]*Z[5];
	J[1783] = Z[23]*Z[12];
	Z[24] = -Z[22];
	Z[27] = -Z[20];
	Z[28] = Z[24]*Z[25]+Z[27]*Z[5];
	J[1784] = Z[28];
	J[1785] = 0.;
	J[1786] = 0.;
	J[1787] = 0.;
	J[1788] = Z[5];
	J[1789] = 0.;
	J[1790] = Z[25];
	J[1791] = 0.;
	J[1792] = 0.;
	J[1793] = 0.;
	J[1794] = 0.;
	J[1795] = 0.;
	J[1796] = 0.;
	J[1797] = 0.;
	J[1798] = 0.;
	J[1799] = 0.;
	J[1800] = 0.;
	J[1801] = 0.;
	J[1802] = 0.;
	J[1803] = 0.;
	J[1804] = 0.;
	Z[14] = -Z[14];
	Z[17] = Z[0]*Z[14]+Z[17];
	Z[14] = Z[2]*Z[14]-Z[16];
	Z[16] = Z[17]*Y[23];
	Z[29] = Z[12]*Z[16];
	Z[30] = Z[14]*Y[24];
	Z[31] = Z[29]-Z[30];
	Z[33] = Z[17]*Y[24];
	Z[34] = Z[14]*Y[23];
	Z[35] = Z[34]*Z[12];
	Z[36] = -(Z[35]+Z[33]);
	J[1805] = Z[31]*Z[25]+Z[36]*Z[5];
	J[1806] = Y[23]*Z[23];
	J[1807] = 0.;
	J[1808] = 0.;
	Z[23] = 0.15*Z[11];
	Z[37] = Z[23]*Z[7];
	Z[39] = 0.025*Z[5];
	Z[40] = Z[39]*Z[6];
	Z[42] = Z[22]*Y[23];
	Z[43] = Z[42]*Z[12];
	Z[44] = Z[22]*Y[24];
	Z[45] = Z[20]*Y[23];
	Z[46] = 0.025*Z[4];
	Z[47] = 0.15*Z[19];
	Z[48] = Z[21]+Z[47]*Z[7]+Z[45]*Z[12]+Y[30]-Z[46]*Z[6]-Z[44];
	Z[6] = 0.025*Z[6]*Z[25];
	Z[49] = Z[27]*Y[23];
	Z[50] = 0.15*Z[7];
	Z[21] = Z[21]+Z[6]-Z[50]*Z[26]-Z[49]*Z[12]-Z[44];
	Z[44] = Z[40]+Y[28]-Z[15]-Z[37]-Z[43]-Z[20]*Y[24];
	Z[15] = Z[15]+Z[37]+Z[43]+Z[44]-Z[40]-Z[27]*Y[24];
	Z[37] = Z[48]*Z[41];
	J[1809] = Z[25]*Z[15]+Z[37]+Z[21]*Z[5];
	Z[43] = 0.025*Z[1];
	Z[10] = 0.15*Z[10];
	Z[51] = Z[10]-Z[43]+0.31;
	Z[3] = 0.025*Z[3];
	Z[52] = -Z[3]+0.15*Z[8];
	Z[53] = Z[52]*Z[2];
	Z[54] = Z[51]*Z[0]+Z[53]+Z[45];
	Z[52] = Z[52]*Z[0];
	Z[51] = Z[52]-Z[51]*Z[2]-Z[42];
	J[1810] = Z[54]*Z[25]+Z[51]*Z[5];
	Z[6] = Z[6]-Z[50]*Z[18]-Z[35]-Z[33];
	Z[29] = Z[50]*Z[9]+Z[29]+Z[44]-Z[40]-Z[30];
	J[1811] = Z[29]*Z[25]+Z[37]+Z[6]*Z[5];
	Z[30] = Z[47]+Z[45]-Z[46];
	Z[33] = Z[39]-Z[23]-Z[42];
	J[1812] = Z[30]*Z[25]+Z[33]*Z[5];
	J[1813] = 1.5*Z[13];
	Z[13] = -Z[23];
	J[1814] = Z[25]*Z[47]+Z[13]*Z[5];
	J[1815] = 0.;
	J[1816] = 0.;
	J[1817] = 0.;
	J[1818] = 0.;
	J[1819] = 0.;
	J[1820] = 0.;
	J[1821] = 0.;
	J[1822] = 0.;
	J[1823] = 0.;
	J[1824] = 0.;
	J[1825] = 0.;
	J[1826] = 0.;
	J[1827] = 0.;
	J[1828] = 0.;
	J[1829] = 0.;
	J[1830] = 0.;
	J[1831] = 0.;
	J[1832] = 0.;
	J[1833] = 0.;
	J[1834] = 0.;
	J[1835] = 0.;
	J[1836] = 0.;
	J[1837] = 0.;
	J[1838] = Z[28];
	J[1839] = 0.;
	J[1840] = 0.;
	J[1841] = 0.;
	J[1842] = Z[5];
	J[1843] = 0.;
	J[1844] = Z[25];
	J[1845] = 0.;
	J[1846] = 0.;
	J[1847] = 0.;
	J[1848] = 0.;
	J[1849] = 0.;
	J[1850] = 0.;
	J[1851] = 0.;
	J[1852] = 0.;
	J[1853] = 0.;
	J[1854] = 0.;
	J[1855] = 0.;
	J[1856] = 0.;
	J[1857] = 0.;
	J[1858] = 0.;
	J[1859] = 0.;
	J[1860] = -Y[23]*(Z[25]*Z[14]+Z[17]*Z[5]);
	J[1861] = 0.;
	J[1862] = 0.;
	J[1863] = 0.;
	Z[1] = Z[10]-Z[38]-0.115*Z[1]+0.155;
	Z[23] = Z[0]*Z[1];
	Z[1] = Z[1]*Z[2];
	Z[28] = Z[52]+Y[29]-Z[1]-Z[42];
	Z[1] = Z[52]-Z[1]-Z[42];
	Z[35] = Y[27]-Z[23]-Z[53]-Z[45];
	Z[23] = Z[23]+Z[53]+Z[35]-Z[49];
	Z[37] = Z[28]*Z[41];
	J[1864] = Z[23]*Z[25]+Z[37]+Z[5]*Z[1];
	J[1865] = 0.;
	Z[38] = 0.15*Z[9];
	Z[16] = Z[39]-Z[38]-Z[16];
	Z[3] = (Z[10]-Z[43])*Z[0]-0.05*(-3.*Z[8]+20.*Z[3])*Z[2]+Z[35]-Z[34];
	J[1866] = Z[3]*Z[25]+Z[37]+Z[16]*Z[5];
	J[1867] = 0.;
	Z[8] = -0.15*Z[18];
	Z[10] = -Z[38];
	J[1868] = Z[8]*Z[25]+Z[10]*Z[5];
	J[1869] = 0.;
	J[1870] = 0.;
	J[1871] = 0.;
	J[1872] = 0.;
	J[1873] = 0.;
	J[1874] = 0.;
	J[1875] = 0.;
	J[1876] = 0.;
	J[1877] = 0.;
	J[1878] = 0.;
	J[1879] = 0.;
	J[1880] = 0.;
	J[1881] = 0.;
	J[1882] = 0.;
	J[1883] = 0.;
	J[1884] = 0.;
	J[1885] = 0.;
	J[1886] = 0.;
	J[1887] = 0.;
	J[1888] = 0.;
	J[1889] = 0.;
	J[1890] = 0.;
	J[1891] = 0.;
	J[1892] = 0.;
	Z[20] = Z[20]*Z[5]-Z[22]*Z[4];
	J[1893] = Z[12]*Z[20];
	Z[12] = Z[24]*Z[5]+Z[27]*Z[4];
	J[1894] = Z[12];
	J[1895] = 0.;
	J[1896] = 0.;
	J[1897] = 0.;
	J[1898] = Z[4];
	J[1899] = 0.;
	J[1900] = Z[5];
	J[1901] = 0.;
	J[1902] = 0.;
	J[1903] = 0.;
	J[1904] = 0.;
	J[1905] = 0.;
	J[1906] = 0.;
	J[1907] = 0.;
	J[1908] = 0.;
	J[1909] = 0.;
	J[1910] = 0.;
	J[1911] = 0.;
	J[1912] = 0.;
	J[1913] = 0.;
	J[1914] = 0.;
	J[1915] = Z[31]*Z[5]+Z[36]*Z[4];
	J[1916] = Z[20]*Y[23];
	J[1917] = 0.;
	J[1918] = 0.;
	Z[20] = Z[48]*Z[25];
	J[1919] = Z[15]*Z[5]+Z[20]+Z[21]*Z[4];
	J[1920] = Z[54]*Z[5]+Z[51]*Z[4];
	J[1921] = Z[29]*Z[5]+Z[20]+Z[6]*Z[4];
	J[1922] = Z[30]*Z[5]+Z[33]*Z[4];
	J[1923] = 1.5*Z[32];
	J[1924] = Z[47]*Z[5]+Z[13]*Z[4];
	J[1925] = 0.;
	J[1926] = 0.;
	J[1927] = 0.;
	J[1928] = 0.;
	J[1929] = 0.;
	J[1930] = 0.;
	J[1931] = 0.;
	J[1932] = 0.;
	J[1933] = 0.;
	J[1934] = 0.;
	J[1935] = 0.;
	J[1936] = 0.;
	J[1937] = 0.;
	J[1938] = 0.;
	J[1939] = 0.;
	J[1940] = 0.;
	J[1941] = 0.;
	J[1942] = 0.;
	J[1943] = 0.;
	J[1944] = 0.;
	J[1945] = 0.;
	J[1946] = 0.;
	J[1947] = 0.;
	J[1948] = Z[12];
	J[1949] = 0.;
	J[1950] = 0.;
	J[1951] = 0.;
	J[1952] = Z[4];
	J[1953] = 0.;
	J[1954] = Z[5];
	J[1955] = 0.;
	J[1956] = 0.;
	J[1957] = 0.;
	J[1958] = 0.;
	J[1959] = 0.;
	J[1960] = 0.;
	J[1961] = 0.;
	J[1962] = 0.;
	J[1963] = 0.;
	J[1964] = 0.;
	J[1965] = 0.;
	J[1966] = 0.;
	J[1967] = 0.;
	J[1968] = 0.;
	J[1969] = 0.;
	J[1970] = -Y[23]*(Z[14]*Z[5]+Z[17]*Z[4]);
	J[1971] = 0.;
	J[1972] = 0.;
	J[1973] = 0.;
	Z[6] = Z[28]*Z[25];
	J[1974] = Z[23]*Z[5]+Z[6]+Z[1]*Z[4];
	J[1975] = 0.;
	J[1976] = Z[3]*Z[5]+Z[6]+Z[16]*Z[4];
	J[1977] = 0.;
	J[1978] = Z[8]*Z[5]+Z[10]*Z[4];
	J[1979] = 0.;
	J[1980] = 0.;
	J[1981] = 0.;
	J[1982] = 0.;
	J[1983] = 0.;
	J[1984] = 0.;
	J[1985] = 0.;
	J[1986] = 0.;
	J[1987] = 0.;
	J[1988] = 0.;
	J[1989] = 0.;
	J[1990] = 0.;
	J[1991] = 0.;
	J[1992] = 0.;
	J[1993] = 0.;
	J[1994] = 0.;
	J[1995] = 0.;
	J[1996] = 0.;
	J[1997] = 0.;
	J[1998] = 0.;
	J[1999] = 0.;
	J[2000] = 0.;
	J[2001] = 0.;
	J[2002] = 0.;
	J[2003] = 0.;
	J[2004] = 0.;
	Z[1] = Y[50]+Y[48];
	Z[3] = cos(Y[47]);
	Z[4] = sin(Y[47]);
	Z[5] = Z[0]*Z[3]+Z[2]*Z[4];
	Z[6] = -Z[5];
	Z[3] = Z[3]*Z[2]-Z[4]*Z[0];
	Z[4] = Z[3]*Z[3];
	Z[8] = Z[6]*Z[5];
	Z[10] = Z[8]-Z[4];
	J[2005] = Z[10]*Z[1];
	J[2006] = 0.;
	J[2007] = 0.;
	J[2008] = Z[3];
	J[2009] = 0.;
	J[2010] = Z[6];
	J[2011] = 0.;
	J[2012] = 0.;
	J[2013] = 0.;
	J[2014] = 0.;
	J[2015] = 0.;
	J[2016] = 0.;
	J[2017] = 0.;
	J[2018] = 0.;
	J[2019] = 0.;
	J[2020] = 0.;
	J[2021] = 0.;
	J[2022] = 0.;
	J[2023] = 0.;
	J[2024] = 0.;
	J[2025] = 0.;
	J[2026] = 0.;
	Z[12] = Z[6]*Y[26];
	Z[13] = Z[3]*Y[25];
	Z[14] = Z[13]*Z[1];
	Z[0] = 0.27*Z[0];
	Z[15] = Z[0]*Y[50];
	Z[16] = Z[3]*Y[26];
	Z[17] = Z[5]*Y[25];
	Z[19] = 0.07*Z[19];
	Z[20] = Z[15]+Z[19]*Z[7]+Z[1]*Z[17]+Y[30]-Z[16];
	Z[21] = Z[6]*Y[25];
	Z[1] = Z[21]*Z[1];
	Z[22] = -(Z[1]+Z[16]);
	Z[11] = 0.07*Z[11];
	Z[23] = Z[11]*Z[7];
	Z[2] = 0.27*Z[2];
	Z[24] = Z[2]*Y[50];
	Z[25] = Y[28]-Z[23]-Z[24]-Z[14]-Z[5]*Y[26];
	Z[27] = Z[14]+Z[25]-Z[12];
	Z[28] = -Z[20]*Z[3];
	J[2027] = Z[27]*Z[6]+Z[28]+Z[22]*Z[3];
	J[2028] = Y[25]*Z[10];
	Z[7] = 0.07*Z[7];
	Z[1] = Z[15]-Z[7]*Z[26]-Z[1]-Z[16];
	Z[10] = Z[23]+Z[24]+Z[14]+Z[25]-Z[12];
	J[2029] = Z[10]*Z[6]+Z[28]+Z[1]*Z[3];
	Z[12] = Z[17]+Z[0]+Z[19];
	Z[14] = -(Z[11]+Z[2]+Z[13]);
	Z[15] = Z[3]*Z[14];
	J[2030] = Z[12]*Z[6]+Z[15];
	Z[16] = -Z[7]*(Z[18]*Z[3]-Z[6]*Z[9]);
	J[2031] = Z[16];
	Z[23] = -Z[11];
	Z[24] = Z[19]*Z[6]+Z[23]*Z[3];
	J[2032] = Z[24];
	J[2033] = Z[16];
	J[2034] = Z[24];
	J[2035] = 0.;
	J[2036] = 0.;
	J[2037] = 0.;
	J[2038] = 0.;
	J[2039] = 0.;
	J[2040] = 0.;
	J[2041] = 0.;
	J[2042] = 0.;
	J[2043] = 0.;
	J[2044] = 0.;
	J[2045] = 0.;
	J[2046] = 0.;
	J[2047] = 0.;
	J[2048] = 0.;
	J[2049] = 0.;
	J[2050] = 0.;
	J[2051] = 0.;
	J[2052] = 0.;
	J[2053] = 0.;
	J[2054] = 0.;
	J[2055] = 0.;
	J[2056] = 0.;
	J[2057] = 0.;
	J[2058] = 0.;
	J[2059] = 0.;
	J[2060] = 0.;
	J[2061] = 0.;
	J[2062] = Z[3];
	J[2063] = 0.;
	J[2064] = Z[6];
	J[2065] = 0.;
	J[2066] = 0.;
	J[2067] = 0.;
	J[2068] = 0.;
	J[2069] = 0.;
	J[2070] = 0.;
	J[2071] = 0.;
	J[2072] = 0.;
	J[2073] = 0.;
	J[2074] = 0.;
	J[2075] = 0.;
	J[2076] = 0.;
	J[2077] = 0.;
	J[2078] = 0.;
	J[2079] = 0.;
	J[2080] = 0.;
	J[2081] = 0.;
	Z[2] = Y[29]-Z[11]-Z[2]-Z[13];
	Z[11] = Y[27]-Z[17]-Z[0]-Z[19];
	Z[13] = -Z[3]*Z[2];
	J[2082] = (Z[11]-Z[21])*Z[6]+Z[13]-Z[4]*Y[25];
	J[2083] = 0.;
	Z[0] = Z[19]+Z[0]+Z[11]-Z[21];
	J[2084] = Z[0]*Z[6]+Z[13]+Z[15];
	J[2085] = 0.;
	Z[4] = -0.07*Z[18];
	Z[13] = -0.07*Z[9];
	Z[15] = Z[6]*Z[4]+Z[13]*Z[3];
	J[2086] = Z[15];
	J[2087] = 0.;
	J[2088] = Z[15];
	J[2089] = 0.;
	J[2090] = 0.;
	J[2091] = 0.;
	J[2092] = 0.;
	J[2093] = 0.;
	J[2094] = 0.;
	J[2095] = 0.;
	J[2096] = 0.;
	J[2097] = 0.;
	J[2098] = 0.;
	J[2099] = 0.;
	J[2100] = 0.;
	J[2101] = 0.;
	J[2102] = 0.;
	J[2103] = 0.;
	J[2104] = 0.;
	J[2105] = 0.;
	J[2106] = 0.;
	J[2107] = 0.;
	J[2108] = 0.;
	J[2109] = 0.;
	J[2110] = 0.;
	J[2111] = 0.;
	J[2112] = 0.;
	J[2113] = 0.;
	J[2114] = 0.;
	J[2115] = 0.;
	Z[8] = Z[8]-Z[3]*Z[3];
	J[2116] = Z[8];
	J[2117] = 0.;
	J[2118] = Z[5];
	J[2119] = 0.;
	J[2120] = Z[3];
	J[2121] = 0.;
	J[2122] = 0.;
	J[2123] = 0.;
	J[2124] = 0.;
	J[2125] = 0.;
	J[2126] = 0.;
	J[2127] = 0.;
	J[2128] = 0.;
	J[2129] = 0.;
	J[2130] = 0.;
	J[2131] = 0.;
	J[2132] = 0.;
	J[2133] = 0.;
	J[2134] = 0.;
	J[2135] = 0.;
	J[2136] = 0.;
	Z[15] = Z[20]*Z[6];
	J[2137] = Z[27]*Z[3]+Z[15]+Z[22]*Z[5];
	J[2138] = 0.;
	J[2139] = Z[10]*Z[3]+Z[15]+Z[5]*Z[1];
	Z[1] = Z[14]*Z[5];
	J[2140] = Z[12]*Z[3]+Z[1];
	Z[7] = Z[7]*(Z[3]*Z[9]-Z[18]*Z[5]);
	J[2141] = Z[7];
	Z[9] = Z[19]*Z[3]+Z[23]*Z[5];
	J[2142] = Z[9];
	J[2143] = Z[7];
	J[2144] = Z[9];
	J[2145] = 0.;
	J[2146] = 0.;
	J[2147] = 0.;
	J[2148] = 0.;
	J[2149] = 0.;
	J[2150] = 0.;
	J[2151] = 0.;
	J[2152] = 0.;
	J[2153] = 0.;
	J[2154] = 0.;
	J[2155] = 0.;
	J[2156] = 0.;
	J[2157] = 0.;
	J[2158] = 0.;
	J[2159] = 0.;
	J[2160] = 0.;
	J[2161] = 0.;
	J[2162] = 0.;
	J[2163] = 0.;
	J[2164] = 0.;
	J[2165] = 0.;
	J[2166] = 0.;
	J[2167] = 0.;
	J[2168] = 0.;
	J[2169] = 0.;
	J[2170] = Z[8];
	J[2171] = 0.;
	J[2172] = Z[5];
	J[2173] = 0.;
	J[2174] = Z[3];
	J[2175] = 0.;
	J[2176] = 0.;
	J[2177] = 0.;
	J[2178] = 0.;
	J[2179] = 0.;
	J[2180] = 0.;
	J[2181] = 0.;
	J[2182] = 0.;
	J[2183] = 0.;
	J[2184] = 0.;
	J[2185] = 0.;
	J[2186] = 0.;
	J[2187] = 0.;
	J[2188] = 0.;
	J[2189] = 0.;
	J[2190] = 0.;
	J[2191] = 0.;
	Z[2] = Z[6]*Z[2];
	J[2192] = Z[2]-(Z[6]*Y[25]+Z[5]*Y[25]-Z[11])*Z[3];
	J[2193] = 0.;
	J[2194] = Z[0]*Z[3]+Z[2]+Z[1];
	J[2195] = 0.;
	Z[0] = Z[3]*Z[4]+Z[13]*Z[5];
	J[2196] = Z[0];
	J[2197] = 0.;
	J[2198] = Z[0];
	J[2199] = 0.;
}

static void inpfn(double T, double *U)
{
	U[0] = 0.;
	U[1] = 0.;
	U[2] = 0.;
	U[3] = 0.;
	U[4] = 0.;
	U[5] = 0.;
	U[6] = 0.;
	U[7] = 0.;
	U[8] = 0.;
}

/*
	Projection: Use Rp,Jp constraint residual and Jacobian functions to
	project the input solution x back onto the constraint manfold.

	Return codes:
	0 - Successful completion
	1 - Entry of Residual or Jacobian is undefined/infinity
	2 - Row of Jacobian is zero, but residual is nonzero
	3 - Iteration limit reached
*/
static long Projection(
	double t,		/* Current time */
	double *x,		/* Current solution (updated) */
	double tol,		/* Tolerance limit for iteration */
	long maxiter	/* Max iteration limit */
)
{
	long i, j, k, r, c, iter, nc2, ip[NCON],per[NDIFF];
	double scl, resmag, val, val2, R[NCON],J[NCON*NDIFF],A[NCON*NCON],iA[NCON*NCON];

	for(iter=0;iter<maxiter;iter++) {

		/* Compute the Jacobian and Residual at the current solution */
		Rp(t, x, R);
		Jp(t, x, J);

		/* Rescale rows of Jacobian so that maximum coeff is 1, validating */
		resmag = 0.0;
		for(i=0;i<NCON;i++) {
			if( R[i]-R[i]!=0.0 ) return(1);
			val = 0.0;
			for(j=0;j<NDIFF;j++) {
				if( J[i*NDIFF+j]-J[i*NDIFF+j]!=0.0 ) return(1);
				val2 = fabs(J[i*NDIFF+j]);
				if( val2>val ) val = val2;
			}
			if( val==0. ) {
				if( R[i]!=0. )
					return(2);
			}
			else {
				val = 1.0/val;
				for(j=0;j<NDIFF;j++) J[i*NDIFF+j] *= val;
				R[i] *= val;
				resmag += R[i]*R[i];
			}
		}

		/* Compute J_hat from J
			The solving process will select the row with the largest residual,
			then choose the largest coeff, computing an approx.  of the condition
			as we go, stopping when the condition becomes too poor. */
		for(i=0;i<NDIFF;i++) per[i]=i;
		nc2 = NCON;
		scl = 1.0;
		i = 0;
		while( i<nc2 ) {
			/* Search for row with largest residual */
			resmag = fabs(R[i]); r = i;
			for(j=i+1;j<nc2;j++) {
				val2 = fabs(R[j]);
				if( val2>resmag ) { resmag = val2; r = j; }
			}
			/* Check for termination on the first row of this iteration */
			if( i==0 && ( resmag<=tol || iter>=maxiter )) {
				nc2 = NDIFF+1; break;
			}

			/* Row 'r' has largest residual 'val', locate column with
				largest coeff */
			val = fabs(J[r*NDIFF+i]); c = i;
			for(j=i+1;j<NDIFF;j++) {
				val2 = fabs(J[r*NDIFF+j]);
				if( val2>val ) { val = val2; c = j; }
			}

			if( scl*val<sqrt(tol) )  {
				/* Coefficient is too small - remove row */
				if( r!=nc2-1 ) {
					for(j=0;j<NDIFF;j++) J[r*NDIFF+j] = J[(nc2-1)*NDIFF+j];
					R[r] = R[nc2-1];
				}
				nc2--;
			}
			else {
				/* Adjust condition estimate */
				scl *= val;
				/* Row/Column exchanges */
				if( c!=i ) {
					for(j=0;j<nc2;j++) { val=J[j*NDIFF+i]; J[j*NDIFF+i]=J[j*NDIFF+c]; J[j*NDIFF+c]=val; }
					j=per[i]; per[i]=per[c]; per[c]=j;
				}
				if( r!=i ) {
					for(j=i;j<NDIFF;j++) { val=J[i*NDIFF+j]; J[i*NDIFF+j]=J[r*NDIFF+j]; J[r*NDIFF+j]=val; }
					val=R[i]; R[i]=R[r]; R[r]=val;
				}
				/* Rescale if necessary */
				if( J[i*NDIFF+i]!=1.0 ) {
					val = 1.0/J[i*NDIFF+i]; 
					J[i*NDIFF+i] = 1.0;
					for(j=i+1;j<NDIFF;j++) J[i*NDIFF+j] = J[i*NDIFF+j]*val;
					R[i] *= val;
				}
				/* Backsub */
				for(r=0;r<nc2;r++)
					if( r!=i && J[r*NDIFF+i]!=0.0 ) {
						for(c=i+1;c<NDIFF;c++) J[r*NDIFF+c] -= J[r*NDIFF+i]*J[i*NDIFF+c];
						R[r] -= J[r*NDIFF+i]*R[i];
						J[r*NDIFF+i] = 0.0;
					}
				if( i==NDIFF-1 ) {
					nc2=NDIFF;
					break;
				}
				else
					i++;
			}
		}
		if( nc2==NDIFF+1 )
			/* Termination: residual within bound on first row */
			break;

		/* Compute A = J_hat * J_hat^T */
		for(j=0;j<nc2;j++)
			for(i=0;i<=j;i++) {
				A[i*nc2+j] = 0.0;
				for(k=0;k<NDIFF;k++) A[i*nc2+j]+=J[i*NDIFF+k]*J[j*NDIFF+k];
			}
		for(i=0;i<nc2;i++)
			for(j=0;j<i;j++)
				A[i*nc2+j]=A[j*nc2+i];

		/* Construct (J_hat * J_hat^T)^(-1) in iA */
		for(i=0;i<nc2*nc2;i++) iA[i]=0.0;
		for(i=0;i<nc2;i++) iA[i*(1+nc2)]=1.0;
		DecompCInc(nc2, A, nc2, ip);
		MultiSolveCInc(nc2, A, nc2, ip, nc2, iA, nc2);

		/* Multiply iA (nc2 x nc2) with R (nc2 x 1) to A (nc2 x 1)
			A = (J_hat * J_hat^T)^(-1) * R */
		for(i=0;i<nc2;i++) {
			A[i] = 0.0;
			for(k=0;k<nc2;k++) A[i] += iA[i*nc2+k]*R[k];
		}

		/* Multiply J_hat^T (NDIFF x nc2) with A (nc2 x 1) to iA (NDIFF x 1)
			 iA = J_hat^T * (J_hat * J_hat^T)^(-1) * R */
		for(i=0;i<NDIFF;i++) {
			iA[i] = 0.0;
			for(k=0;k<nc2;k++) iA[i] += J[k*NDIFF+i]*A[k];
		}

		val=0.0; for(i=0;i<NDIFF;i++) val+=x[i]*x[i]; val=sqrt(val);
		val2=0.0; for(i=0;i<NDIFF;i++) val2+=iA[i]*iA[i]; val2=sqrt(val2);
		val = val2/((val>0.1*val2)?val:(0.1*val2));
		if( val>0.1 ) {
			/* Solution is very far off - Use relaxed */
			val2 = ( tol>0.1/val )?tol:(0.1/val);
			for(i=0;i<NDIFF;i++) x[per[i]]-=val2*iA[i];
		}
		else
			/* Direct newton */
			for(i=0;i<NDIFF;i++) x[per[i]]-=iA[i];
	}
	if( iter==maxiter ) return(3); else return(0);
}

static void SolverUpdate(double *u, double *p, long first, long internal, SolverStruct *S)
{
	long i;

	inpfn(S->w[0],u);
	for(i=0; i<NINP; i++) S->w[i+NDIFF+NIX1-NINP+1]=u[i];
	fp(NEQ,S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
	if(S->w[NEQ+NPAR+1]-S->w[NEQ+NPAR+1]!=0.0) {
		SolverError(S,"index-1 and derivative evaluation failure");
		return;
	}
	if(internal) return;
	i=Projection(S->w[0],&S->w[1],CONTOL,CONITER);
	if(i>0) {
		SolverError(S,"constraint projection failure");
		return;
	}
	fp(NEQ,S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
	if(S->w[NEQ+NPAR+1]-S->w[NEQ+NPAR+1]!=0.0) {
		SolverError(S,"index-1 and derivative evaluation failure");
		return;
	}
}

static void SolverOutputs(double *y, SolverStruct *S)
{
	y[ 0]=S->w[50];
	y[ 1]=S->w[52];
	y[ 2]=S->w[54];
	y[ 3]=S->w[10];
	y[ 4]=S->w[12];
	y[ 5]=S->w[14];
	y[ 6]=S->w[16];
	y[ 7]=S->w[18];
	y[ 8]=S->w[20];
	y[ 9]=S->w[22];
	y[10]=S->w[24];
	y[11]=S->w[26];
	y[12]=S->w[11];
	y[13]=S->w[13];
	y[14]=S->w[15];
	y[15]=S->w[17];
	y[16]=S->w[19];
	y[17]=S->w[21];
	y[18]=S->w[23];
	y[19]=S->w[25];
	y[20]=S->w[27];
}

static void RK4Step(double *u, SolverStruct *S)
{
	long i;
	double y[NEQ+1],yp1[NDIFF],yp2[NDIFF],yp3[NDIFF];

	for(i=0;i<NEQ+1;i++) y[i]=S->w[i];
	for(i=0;i<NDIFF;i++) yp1[i]=S->w[1+NEQ+NPAR+i];
	S->w[0]+=0.5*S->h;
	for(i=0;i<NDIFF;i++) S->w[i+1]+=0.5*S->h*S->w[1+NEQ+NPAR+i];
	SolverUpdate(u,NULL,0,1,S);
	for(i=0;i<NDIFF;i++) yp2[i]=S->w[1+NEQ+NPAR+i];
	for(i=0;i<NDIFF;i++) S->w[i+1]=y[i+1]+0.5*S->h*S->w[1+NEQ+NPAR+i];
	SolverUpdate(u,NULL,0,1,S);
	for(i=0;i<NDIFF;i++) yp3[i]=S->w[1+NEQ+NPAR+i];
	S->w[0]=y[0]+S->h;
	for(i=0;i<NDIFF;i++) S->w[i+1]=y[i+1]+S->h*S->w[1+NEQ+NPAR+i];
	SolverUpdate(u,NULL,0,1,S);
	for(i=0;i<NDIFF;i++) S->w[i+1]=y[i+1]+S->h/6.0*(yp1[i]+2.0*(yp2[i]+yp3[i])+S->w[1+NEQ+NPAR+i]);
	SolverUpdate(u,NULL,0,0,S);
}

static void SolverSetup(double t0, double *ic, double *u, double *p, double *y, double h, SolverStruct *S)
{
	long i;

	S->h = h;
	S->iw=NULL;
	S->w[0] = t0;
	S->w[1] =  2.52048640798927283e-02;
	S->w[2] = -1.34961901389666766e-01;
	S->w[3] =  1.41819100501621970e-01;
	S->w[4] =  1.02407727896437803e-01;
	S->w[5] = -3.02206776287544832e-01;
	S->w[6] = -3.21827392925877365e-01;
	S->w[7] =  1.96387384889445016e-01;
	S->w[8] =  2.88009838892946901e-01;
	S->w[9] =  2.35700076887724014e-01;
	S->w[10] =  2.52048640798927283e-02;
	S->w[11] = -0.00000000000000000e+00;
	S->w[12] = -1.34961901389666766e-01;
	S->w[13] = -0.00000000000000000e+00;
	S->w[14] =  1.41819100501621970e-01;
	S->w[15] = 2.62299451377117790e-320;
	S->w[16] =  1.02407727896437803e-01;
	S->w[17] = -3.35272947267869905e-320;
	S->w[18] = -3.02206776287544832e-01;
	S->w[19] = -2.89670688156722849e-320;
	S->w[20] = -3.21827392925877365e-01;
	S->w[21] = 5.39717311516977725e-320;
	S->w[22] =  1.96387384889445016e-01;
	S->w[23] = -3.21395803638765112e-314;
	S->w[24] =  2.88009838892946901e-01;
	S->w[25] = 5.97864402311124080e-315;
	S->w[26] =  2.35700076887724014e-01;
	S->w[27] = 5.78760621909385146e-316;
	S->w[28] = -8.97785328665967608e-02;
	S->w[29] = -1.26754349720835580e-316;
	S->w[30] = -4.60373565810826668e-01;
	S->w[31] = -2.30526797689137716e-315;
	S->w[32] =  3.29561246371421657e+00;
	S->w[33] =  0.00000000000000000e+00;
	S->w[34] =  2.86543634660644635e-02;
	S->w[35] = -0.00000000000000000e+00;
	S->w[36] = -6.12519178789755081e+00;
	S->w[37] =  0.00000000000000000e+00;
	S->w[38] =  6.06353553676135615e+00;
	S->w[39] =  0.00000000000000000e+00;
	S->w[40] =  1.65772216535592459e-01;
	S->w[41] = -1.09010644098412638e-319;
	S->w[42] = -1.26282484788857214e+01;
	S->w[43] =  0.00000000000000000e+00;
	S->w[44] = -1.24371066118580731e-01;
	S->w[45] =  0.00000000000000000e+00;
	S->w[46] =  1.21135104420087569e-01;
	S->w[47] =  0.00000000000000000e+00;
	S->w[48] =  6.22200934861568578e-01;
	S->w[49] = -1.99090995982229619e-315;
	S->w[50] = -1.56596104514230827e+01;
	S->w[51] = -0.00000000000000000e+00;
	S->w[52] =  8.38707632915445700e-01;
	S->w[53] = -9.74850807122280381e-319;
	S->w[54] =  3.91148344113752033e+00;
	S->w[55] = 2.23727512515614931e-314;
	S->w[56] =  7.82980522571154097e+02;
	S->w[57] = -4.19353816457722814e+01;
	S->w[58] = -1.95574172056876023e+02;
	S->w[59] =  0.00000000000000000e+00;
	S->w[60] =  1.38888888888888886e+02;
	S->w[61] =  2.79777777777777770e+00;
	S->w[62] =  0.00000000000000000e+00;
	S->w[63] =  1.00000000000000000e+00;
	S->w[64] =  2.00000000000000004e-02;
	S->w[65] =  0.00000000000000000e+00;
	S->w[66] =  1.38888888888888886e+02;
	S->w[67] =  2.00000000000000004e-02;
	S->w[68] =  0.00000000000000000e+00;
	S->w[69] =  1.00000000000000000e+00;
	S->w[70] =  0.00000000000000000e+00;
	S->w[71] =  0.00000000000000000e+00;
	S->w[72] =  1.38888888888888886e+02;
	S->w[73] =  2.00000000000000004e-02;
	S->w[74] =  0.00000000000000000e+00;
	S->w[75] =  1.00000000000000000e+00;
	S->w[76] =  0.00000000000000000e+00;
	S->w[77] =  0.00000000000000000e+00;
	S->w[78] =  1.38888888888888886e+02;
	S->w[79] =  2.00000000000000004e-02;
	S->w[80] =  0.00000000000000000e+00;
	S->w[81] =  1.00000000000000000e+00;
	S->w[82] =  0.00000000000000000e+00;
	S->w[83] =  0.00000000000000000e+00;
	S->w[84] =  2.77777777777777786e+01;
	S->w[85] =  2.00000000000000004e-02;
	S->w[86] =  0.00000000000000000e+00;
	S->w[87] =  1.00000000000000000e+00;
	S->w[88] =  0.00000000000000000e+00;
	S->w[89] =  0.00000000000000000e+00;
	S->w[90] =  2.77777777777777786e+01;
	S->w[91] =  2.00000000000000004e-02;
	S->w[92] =  0.00000000000000000e+00;
	S->w[93] =  1.00000000000000000e+00;
	S->w[94] =  0.00000000000000000e+00;
	S->w[95] =  0.00000000000000000e+00;
	S->w[96] =  4.62962962962962976e+01;
	S->w[97] =  2.00000000000000004e-02;
	S->w[98] =  0.00000000000000000e+00;
	S->w[99] =  1.00000000000000000e+00;
	S->w[100] =  0.00000000000000000e+00;
	S->w[101] =  0.00000000000000000e+00;
	S->w[102] =  2.77777777777777786e+01;
	S->w[103] =  2.00000000000000004e-02;
	S->w[104] =  0.00000000000000000e+00;
	S->w[105] =  1.00000000000000000e+00;
	S->w[106] =  0.00000000000000000e+00;
	S->w[107] =  0.00000000000000000e+00;
	S->w[108] =  2.77777777777777786e+01;
	S->w[109] =  2.00000000000000004e-02;
	S->w[110] =  0.00000000000000000e+00;
	S->w[111] =  1.00000000000000000e+00;
	S->w[112] =  0.00000000000000000e+00;
	S->w[113] = -2.00000000000000004e-02;
	S->w[114] =  0.00000000000000000e+00;
	S->w[115] =  0.00000000000000000e+00;
	S->w[116] =  0.00000000000000000e+00;
	S->w[117] =  0.00000000000000000e+00;
	S->w[118] =  0.00000000000000000e+00;
	S->w[119] =  0.00000000000000000e+00;
	S->w[120] =  0.00000000000000000e+00;
	S->w[121] =  0.00000000000000000e+00;
	S->w[122] =  0.00000000000000000e+00;
	S->w[123] =  0.00000000000000000e+00;
	S->w[124] =  0.00000000000000000e+00;
	S->w[125] =  0.00000000000000000e+00;
	S->w[126] =  0.00000000000000000e+00;
	S->w[127] =  0.00000000000000000e+00;
	S->w[128] =  0.00000000000000000e+00;
	S->w[129] =  0.00000000000000000e+00;
	S->w[130] =  0.00000000000000000e+00;
	S->w[131] = -1.22848973152245162e+03;
	S->w[132] =  0.00000000000000000e+00;
	S->w[133] =  0.00000000000000000e+00;
	S->w[134] =  0.00000000000000000e+00;
	S->w[135] =  0.00000000000000000e+00;
	S->w[136] =  0.00000000000000000e+00;
	S->w[137] =  0.00000000000000000e+00;
	S->w[138] =  0.00000000000000000e+00;
	S->w[139] =  0.00000000000000000e+00;
	S->w[140] =  0.00000000000000000e+00;
	S->w[141] =  1.71935672493147149e+03;
	S->w[142] =  1.56596104514230819e+03;
	S->w[143] = -8.38707632915445629e+01;
	S->w[144] = -3.91148344113752046e+02;
	S->w[145] =  2.00000000000000004e-02;
	S->w[146] =  0.00000000000000000e+00;
	S->w[147] =  0.00000000000000000e+00;
	S->w[148] =  0.00000000000000000e+00;
	S->w[149] =  0.00000000000000000e+00;
	S->w[150] =  0.00000000000000000e+00;
	S->w[151] =  0.00000000000000000e+00;
	S->w[152] =  0.00000000000000000e+00;
	S->w[153] =  0.00000000000000000e+00;
	if(ic) for(i=0;i<NDIFF;i++) {
		S->w[i+1]=ic[i];
		S->w[i+NEQ+NPAR+1]=0.0;
	}
	SolverUpdate(u,p,1,0,S);
	SolverOutputs(y,S);
}

/*
	Parametrized simulation driver
*/
EXP long M_DECL ParamDriverC(double t0, double dt, long npts, double *ic, double *p, double *out, char *errbuf, long internal)
{
	double u[NINP],y[NOUT],w[1+2*NEQ+NPAR+NDFA+NEVT];
	long i,j;
	SolverStruct S;

	/* Setup */
	for(i=0;i<npts*(NOUT+1);i++) out[i]=*dsn_undef;
	S.w=w;
	if(internal==0) S.err=0; else S.err=-1;
	S.buf=errbuf;
	SolverSetup(t0,ic,u,p,y,dt,&S);
	/* Output */
	out[0]=t0; for(j=0;j<NOUT;j++) out[j+1]=y[j];
	/* Integration loop */
	for(i=1;i<npts;i++) {
		/* Take a step with states */
		RK4Step(u,&S);
		if( S.err>0 ) break;
		/* Output */
		SolverOutputs(y,&S);
		out[i*(NOUT+1)]=S.w[0]; for(j=0;j<NOUT;j++) out[i*(NOUT+1)+j+1]=y[j];
	}

	return(i);
}

EXP ALGEB M_DECL ParamDriver( MKernelVector kv_in, ALGEB *args )
{
	double t0,tf,dt,*ic,*p,*out;
	M_INT nargs,bounds[4],npts,naout,i;
	RTableSettings s;
	ALGEB outd;
	char buf[1000];

	kv=kv_in;
	nargs=kv->numArgs((ALGEB)args);
	if( nargs<5 || nargs>6 )
		kv->error("incorrect number of arguments");

	/* Process time vals */
	if( !kv->isNumeric(args[1]) )
		kv->error("argument #1, the initial time, must be numeric");
	t0=kv->mapleToFloat64(args[1]);
	if( !kv->isNumeric(args[2]) )
		kv->error("argument #2, the final time, must be numeric");
	tf=kv->mapleToFloat64(args[2]);
	if( t0>=tf )
		kv->error("the final time must be larger than the initial time");
	if( !kv->isNumeric(args[3]) )
		kv->error("argument #3, the time step, must be a positive numeric value");
	dt=kv->mapleToFloat64(args[3]);
	if(dt<=0)
		kv->error("argument #3, the time step, must be a positive numeric value");
	npts=(M_INT)ceil((tf+1e-10-t0)/dt)+1;

	/* Processing ic in */
	if( NDIFF==0 )
		ic=NULL;
	else if( kv->isInteger(args[4]) && kv->mapleToInteger32(args[4])==0 )
		ic=NULL;
	else if( !kv->isRTable(args[4]) ) {
		ic=NULL;
		kv->error("argument #4, the initial data, must be a 1..ndiff rtable");
	}
	else {
		kv->rtableGetSettings(&s,args[4]);
		if( s.storage != RTABLE_RECT || s.data_type != RTABLE_FLOAT64 ||
			 s.num_dimensions != 1 || kv->rtableLowerBound(args[4],1)!=1 ||
			 kv->rtableUpperBound(args[4],1) != NDIFF )
			kv->error("argument #4, the initial data, must be a 1..ndiff rtable");
		ic=(double *)kv->rtableData(args[4]);
	}

	/* Processing parameters in */
	if( NPAR==0 )
		p=NULL;
	else if( kv->isInteger(args[5]) && kv->mapleToInteger32(args[5])==0 )
		p=NULL;
	else if( !kv->isRTable(args[5]) ) {
		p=NULL;
		kv->error("argument #5, the parameter data, must be a 1..npar rtable");
	}
	else {
		kv->rtableGetSettings(&s,args[5]);
		if( s.storage != RTABLE_RECT || s.data_type != RTABLE_FLOAT64 ||
			 s.num_dimensions != 1 || kv->rtableLowerBound(args[5],1)!=1 ||
			 kv->rtableUpperBound(args[5],1) != NPAR )
			kv->error("argument #5, the parameter data, must be a 1..npar rtable");
		p=(double *)kv->rtableData(args[5]);
	}

	/* Output data table */
	if( nargs==6 ) {
		outd=NULL;
		if( !kv->isRTable(args[6]) ) {
			out=NULL;
			naout=0;
			kv->error("argument #6, the output data, must be a 1..npts,1..nout+1 C_order rtable");
		}
		else {
			kv->rtableGetSettings(&s,args[6]);
			if( s.storage != RTABLE_RECT || s.data_type != RTABLE_FLOAT64 ||
			 	s.order != RTABLE_C || s.num_dimensions != 2 ||
			 	kv->rtableLowerBound(args[6],1)!=1 ||
			 	kv->rtableLowerBound(args[6],2)!=1 ||
			 	kv->rtableUpperBound(args[6],2) != NOUT+1 )
				kv->error("argument #6, the output data, must be a 1..npts,1..nout+1 C_order rtable");
			naout=kv->rtableUpperBound(args[6],1);
			if( naout<1 )
				kv->error("argument #6, the output data, must have at least 1 output slot");
			out=(double *)kv->rtableData(args[6]);
			if(naout<npts) npts=naout;
		}
	}
	else {
		kv->rtableGetDefaults(&s);
		bounds[0]=1; bounds[1]=npts;
		bounds[2]=1; bounds[3]=NOUT+1;
		s.storage=RTABLE_RECT;
		s.data_type=RTABLE_FLOAT64;
		s.order=RTABLE_C;
		s.num_dimensions=2;
		s.subtype=RTABLE_ARRAY;
		outd=kv->rtableCreate(&s,NULL,bounds);
		out=(double *)kv->rtableData(outd);
		naout=npts;
	}
	for(i=0;i<naout*(NOUT+1);i++) out[i]=*dsn_undef;

	i=ParamDriverC(t0,dt,npts,ic,p,out,buf,1);

	/* All done */
	if(outd==NULL)
		return(kv->toMapleInteger(i));
	else
		return(outd);
}



/*  A class to contain all the information that needs to 
    be passed around between these functions, and can 
    encapsulate it and hide it from the Python interface.
    
    Written by Travis DeWolf (May, 2013)
*/
class Sim {
    /* Very simple class, just stores the variables we 
    need for simulation, and has 2 functions. Reset 
    resets the state of the simulation, and step steps it 
    forward. Tautology ftw!*/

    double* params;
    double dt, t0;
	double u0[NINP], other_out[NOUT+1], y[NOUT]; 
    double w[NOUT + 2 * NEQ + NPAR + NDFA + NEVT];
    char* errbuf;

    SolverStruct S;
    
    public:
        Sim(double dt_val, double* params_pointer);
        void reset(double* out, double* ic);
        void step(double* out, double* u);
};

Sim::Sim(double dt_val, double* params_pointer)
{
    t0 = 0.0; // set up start time
    dt = dt_val; // set time step
    for (int i = 0; i < NINP; i++) u0[i] = 0.0; // initial control signal

    params = params_pointer; // set up parameters reference

	/* Setup */
	S.w = w;
	S.err = 0; 
    S.buf = errbuf;
}

void Sim::reset(double* out, double* ic) 
{
	SolverSetup(t0, ic, u0, params, y, dt, &S);

	/* Output */
	out[0] = t0; 
    for(int j = 0; j < NOUT; j++) {
        out[j + 1] = y[j];
    }
}

void Sim::step(double* out, double* u)
/* u: control signal */
{
    for (int k = 0; k < NOUT; k++)
        out[k] = *dsn_undef; // clear values to nan 

	/* Integration loop */
    /* Take a step with states */
    //EulerStep(u, &S);
    RK4Step(u, &S);

    if (S.err <= 0) 
    {
        /* Output */
        SolverOutputs(y, &S);

        out[0] = S.w[0]; 
        for(long j = 0; j < NOUT; j++) 
            out[j + 1] = y[j];
    }
}

int main (void)
{
    FILE *fd;
 
    double *ic, *p, *out;
    long i, j, outd;
    long internal = 0;
 
    double dt = 0.0000025;
 
    int time_steps = 1000000;
    double u[NINP];
    for (int k = 0; k < NINP; k++) u[k] = .1;
 
    fd = fopen("output.dat", "w");
 
    Sim sim = Sim(dt, NULL);
    sim.reset(out, NULL); // ic = NULL, use default start state
 
    for(i=0;i<time_steps;i++)
    {
        sim.step(out, u);
        fprintf(fd,"%lf ",out[0]);
        for(j=0;j<NOUT;j++)
        {
            fprintf(fd,"%lf ",out[j+1]);
        }
        fprintf(fd, "\n");
    }
 
    fclose(fd);
 
    return 0;
}
